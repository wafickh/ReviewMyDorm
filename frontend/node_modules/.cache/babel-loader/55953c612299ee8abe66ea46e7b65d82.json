{"ast":null,"code":"import axios from 'axios';\nconst url = 'http://localhost:5000/api/schools';\nexport const fetchSchools = () => axios.get(url);\nexport const fetchSchoolName = Name => axios.get(`http://localhost:5000/api/schools/findName/${Name}`, Name);\nexport const getDorms = () => axios.get(`http://localhost:5000/api/dorms`);\nexport const getReviews = () => axios.get(`http://localhost:5000/api/reviews`);\nexport const getUsers = () => axios.get('http://localhost:5000/api/users');\nexport const GetDorm = id => axios.get(`http://localhost:5000/api/dorms/find/${id}`, id);\nconst API = axios.create({\n  baseURL: 'http://localhost:5000/api'\n});\nAPI.interceptors.request.use(req => {\n  if (localStorage.getItem('profile')) {\n    req.headers.Authorization = `Bearer ${JSON.parse(localStorage.getItem('profile')).token}`;\n  }\n\n  return req;\n});\nexport const approvedorms = id => axios.put(`http://localhost:5000/api/dorms/${id}`, id);\nexport const deletedorms = (schoolid, dormid, userid) => axios.delete(`http://localhost:5000/api/dorms/${schoolid}/${dormid}/${userid}`, schoolid, dormid, userid);\nexport const approvereviews = (id, dormid) => axios.put(`http://localhost:5000/api/reviews/${id}/${dormid}`, id, dormid);\nexport const deletereviews = (dormid, userid, reviewid) => axios.delete(`http://localhost:5000/api/reviews/${dormid}/${userid}/${reviewid}`, dormid, dormid, userid, review);\nexport const createDorm = formData => API.post('/dorms', formData);\nexport const createReview = formData => API.post('/reviews', formData);\nexport const signIn = formData => API.post('/users/signin', formData);\nexport const signUp = formData => API.post('/users/signup', formData);","map":{"version":3,"sources":["C:/Users/USER/OneDrive/Desktop/WebCourse/DormCritique/frontend/src/api/index.js"],"names":["axios","url","fetchSchools","get","fetchSchoolName","Name","getDorms","getReviews","getUsers","GetDorm","id","API","create","baseURL","interceptors","request","use","req","localStorage","getItem","headers","Authorization","JSON","parse","token","approvedorms","put","deletedorms","schoolid","dormid","userid","delete","approvereviews","deletereviews","reviewid","review","createDorm","formData","post","createReview","signIn","signUp"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,GAAG,GAAG,mCAAZ;AAEA,OAAO,MAAMC,YAAY,GAAG,MAAMF,KAAK,CAACG,GAAN,CAAUF,GAAV,CAA3B;AACP,OAAO,MAAMG,eAAe,GAAIC,IAAD,IAAUL,KAAK,CAACG,GAAN,CAAW,8CAA6CE,IAAK,EAA7D,EAAgEA,IAAhE,CAAlC;AAEP,OAAO,MAAMC,QAAQ,GAAG,MAAMN,KAAK,CAACG,GAAN,CAAW,iCAAX,CAAvB;AAEP,OAAO,MAAMI,UAAU,GAAG,MAAMP,KAAK,CAACG,GAAN,CAAW,mCAAX,CAAzB;AAEP,OAAO,MAAMK,QAAQ,GAAG,MAAMR,KAAK,CAACG,GAAN,CAAU,iCAAV,CAAvB;AAEP,OAAO,MAAMM,OAAO,GAAIC,EAAD,IAAQV,KAAK,CAACG,GAAN,CAAW,wCAAuCO,EAAG,EAArD,EAAwDA,EAAxD,CAAxB;AAEP,MAAMC,GAAG,GAAGX,KAAK,CAACY,MAAN,CAAa;AAAEC,EAAAA,OAAO,EAAE;AAAX,CAAb,CAAZ;AAEAF,GAAG,CAACG,YAAJ,CAAiBC,OAAjB,CAAyBC,GAAzB,CAA8BC,GAAD,IAAS;AAClC,MAAIC,YAAY,CAACC,OAAb,CAAqB,SAArB,CAAJ,EAAqC;AACjCF,IAAAA,GAAG,CAACG,OAAJ,CAAYC,aAAZ,GAA6B,UAASC,IAAI,CAACC,KAAL,CAAWL,YAAY,CAACC,OAAb,CAAqB,SAArB,CAAX,EAA4CK,KAAM,EAAxF;AACH;;AACD,SAAOP,GAAP;AACH,CALD;AAMA,OAAO,MAAMQ,YAAY,GAAIf,EAAD,IAAQV,KAAK,CAAC0B,GAAN,CAAW,mCAAkChB,EAAG,EAAhD,EAAmDA,EAAnD,CAA7B;AACP,OAAO,MAAMiB,WAAW,GAAG,CAACC,QAAD,EAAWC,MAAX,EAAmBC,MAAnB,KAA8B9B,KAAK,CAAC+B,MAAN,CAAc,mCAAkCH,QAAS,IAAGC,MAAO,IAAGC,MAAO,EAA7E,EAAgFF,QAAhF,EAA0FC,MAA1F,EAAkGC,MAAlG,CAAlD;AAEP,OAAO,MAAME,cAAc,GAAG,CAACtB,EAAD,EAAKmB,MAAL,KAAgB7B,KAAK,CAAC0B,GAAN,CAAW,qCAAoChB,EAAG,IAAGmB,MAAO,EAA5D,EAA+DnB,EAA/D,EAAmEmB,MAAnE,CAAvC;AACP,OAAO,MAAMI,aAAa,GAAG,CAACJ,MAAD,EAASC,MAAT,EAAgBI,QAAhB,KAA6BlC,KAAK,CAAC+B,MAAN,CAAc,qCAAoCF,MAAO,IAAGC,MAAO,IAAGI,QAAS,EAA/E,EAAkFL,MAAlF,EAA0FA,MAA1F,EAAkGC,MAAlG,EAAyGK,MAAzG,CAAnD;AAGP,OAAO,MAAMC,UAAU,GAAIC,QAAD,IAAc1B,GAAG,CAAC2B,IAAJ,CAAS,QAAT,EAAmBD,QAAnB,CAAjC;AACP,OAAO,MAAME,YAAY,GAAIF,QAAD,IAAc1B,GAAG,CAAC2B,IAAJ,CAAS,UAAT,EAAqBD,QAArB,CAAnC;AAEP,OAAO,MAAMG,MAAM,GAAIH,QAAD,IAAc1B,GAAG,CAAC2B,IAAJ,CAAS,eAAT,EAA0BD,QAA1B,CAA7B;AACP,OAAO,MAAMI,MAAM,GAAIJ,QAAD,IAAc1B,GAAG,CAAC2B,IAAJ,CAAS,eAAT,EAA0BD,QAA1B,CAA7B","sourcesContent":["import axios from 'axios';\r\n\r\nconst url = 'http://localhost:5000/api/schools'\r\n\r\nexport const fetchSchools = () => axios.get(url);\r\nexport const fetchSchoolName = (Name) => axios.get(`http://localhost:5000/api/schools/findName/${Name}`, Name);\r\n\r\nexport const getDorms = () => axios.get(`http://localhost:5000/api/dorms`)\r\n\r\nexport const getReviews = () => axios.get(`http://localhost:5000/api/reviews`)\r\n\r\nexport const getUsers = () => axios.get('http://localhost:5000/api/users')\r\n\r\nexport const GetDorm = (id) => axios.get(`http://localhost:5000/api/dorms/find/${id}`, id);\r\n\r\nconst API = axios.create({ baseURL: 'http://localhost:5000/api' });\r\n\r\nAPI.interceptors.request.use((req) => {\r\n    if (localStorage.getItem('profile')) {\r\n        req.headers.Authorization = `Bearer ${JSON.parse(localStorage.getItem('profile')).token}`;\r\n    }\r\n    return req;\r\n});\r\nexport const approvedorms = (id) => axios.put(`http://localhost:5000/api/dorms/${id}`, id)\r\nexport const deletedorms = (schoolid, dormid, userid) => axios.delete(`http://localhost:5000/api/dorms/${schoolid}/${dormid}/${userid}`, schoolid, dormid, userid)\r\n\r\nexport const approvereviews = (id, dormid) => axios.put(`http://localhost:5000/api/reviews/${id}/${dormid}`, id, dormid)\r\nexport const deletereviews = (dormid, userid,reviewid) => axios.delete(`http://localhost:5000/api/reviews/${dormid}/${userid}/${reviewid}`, dormid, dormid, userid,review)\r\n\r\n\r\nexport const createDorm = (formData) => API.post('/dorms', formData);\r\nexport const createReview = (formData) => API.post('/reviews', formData);\r\n\r\nexport const signIn = (formData) => API.post('/users/signin', formData);\r\nexport const signUp = (formData) => API.post('/users/signup', formData);\r\n"]},"metadata":{},"sourceType":"module"}