{"ast":null,"code":"/*!\n  * Bootstrap selector-engine.js v5.2.3 (https://getbootstrap.com/)\n  * Copyright 2011-2022 The Bootstrap Authors (https://github.com/twbs/bootstrap/graphs/contributors)\n  * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n  */\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('../util/index')) : typeof define === 'function' && define.amd ? define(['../util/index'], factory) : (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.SelectorEngine = factory(global.Index));\n})(this, function (index) {\n  'use strict';\n  /**\n   * --------------------------------------------------------------------------\n   * Bootstrap (v5.2.3): dom/selector-engine.js\n   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n   * --------------------------------------------------------------------------\n   */\n\n  /**\n   * Constants\n   */\n\n  const SelectorEngine = {\n    find(selector, element = document.documentElement) {\n      return [].concat(...Element.prototype.querySelectorAll.call(element, selector));\n    },\n\n    findOne(selector, element = document.documentElement) {\n      return Element.prototype.querySelector.call(element, selector);\n    },\n\n    children(element, selector) {\n      return [].concat(...element.children).filter(child => child.matches(selector));\n    },\n\n    parents(element, selector) {\n      const parents = [];\n      let ancestor = element.parentNode.closest(selector);\n\n      while (ancestor) {\n        parents.push(ancestor);\n        ancestor = ancestor.parentNode.closest(selector);\n      }\n\n      return parents;\n    },\n\n    prev(element, selector) {\n      let previous = element.previousElementSibling;\n\n      while (previous) {\n        if (previous.matches(selector)) {\n          return [previous];\n        }\n\n        previous = previous.previousElementSibling;\n      }\n\n      return [];\n    },\n\n    // TODO: this is now unused; remove later along with prev()\n    next(element, selector) {\n      let next = element.nextElementSibling;\n\n      while (next) {\n        if (next.matches(selector)) {\n          return [next];\n        }\n\n        next = next.nextElementSibling;\n      }\n\n      return [];\n    },\n\n    focusableChildren(element) {\n      const focusables = ['a', 'button', 'input', 'textarea', 'select', 'details', '[tabindex]', '[contenteditable=\"true\"]'].map(selector => `${selector}:not([tabindex^=\"-\"])`).join(',');\n      return this.find(focusables, element).filter(el => !index.isDisabled(el) && index.isVisible(el));\n    }\n\n  };\n  return SelectorEngine;\n});","map":{"version":3,"sources":["../../src/dom/selector-engine.js"],"names":["SelectorEngine","find","element","document","Element","findOne","children","child","parents","ancestor","prev","previous","next","focusableChildren","focusables","selector","el","isDisabled","isVisible"],"mappings":";;;;;;;;;AAAA;;;;;;;AASA;;;;AAIA,QAAMA,cAAc,GAAG;AACrBC,IAAAA,IAAI,CAAA,QAAA,EAAWC,OAAO,GAAGC,QAAQ,CAA7B,eAAA,EAA+C;AACjD,aAAO,GAAA,MAAA,CAAU,GAAGC,OAAO,CAAPA,SAAAA,CAAAA,gBAAAA,CAAAA,IAAAA,CAAAA,OAAAA,EAApB,QAAoBA,CAAb,CAAP;AAFmB,KAAA;;AAKrBC,IAAAA,OAAO,CAAA,QAAA,EAAWH,OAAO,GAAGC,QAAQ,CAA7B,eAAA,EAA+C;AACpD,aAAOC,OAAO,CAAPA,SAAAA,CAAAA,aAAAA,CAAAA,IAAAA,CAAAA,OAAAA,EAAP,QAAOA,CAAP;AANmB,KAAA;;AASrBE,IAAAA,QAAQ,CAAA,OAAA,EAAA,QAAA,EAAoB;AAC1B,aAAO,GAAA,MAAA,CAAU,GAAGJ,OAAO,CAApB,QAAA,EAAA,MAAA,CAAsCK,KAAK,IAAIA,KAAK,CAALA,OAAAA,CAAtD,QAAsDA,CAA/C,CAAP;AAVmB,KAAA;;AAarBC,IAAAA,OAAO,CAAA,OAAA,EAAA,QAAA,EAAoB;AACzB,YAAMA,OAAO,GAAb,EAAA;AACA,UAAIC,QAAQ,GAAGP,OAAO,CAAPA,UAAAA,CAAAA,OAAAA,CAAf,QAAeA,CAAf;;AAEA,aAAA,QAAA,EAAiB;AACfM,QAAAA,OAAO,CAAPA,IAAAA,CAAAA,QAAAA;AACAC,QAAAA,QAAQ,GAAGA,QAAQ,CAARA,UAAAA,CAAAA,OAAAA,CAAXA,QAAWA,CAAXA;AACD;;AAED,aAAA,OAAA;AAtBmB,KAAA;;AAyBrBC,IAAAA,IAAI,CAAA,OAAA,EAAA,QAAA,EAAoB;AACtB,UAAIC,QAAQ,GAAGT,OAAO,CAAtB,sBAAA;;AAEA,aAAA,QAAA,EAAiB;AACf,YAAIS,QAAQ,CAARA,OAAAA,CAAJ,QAAIA,CAAJ,EAAgC;AAC9B,iBAAO,CAAP,QAAO,CAAP;AACD;;AAEDA,QAAAA,QAAQ,GAAGA,QAAQ,CAAnBA,sBAAAA;AACD;;AAED,aAAA,EAAA;AApCmB,KAAA;;AAsCrB;AACAC,IAAAA,IAAI,CAAA,OAAA,EAAA,QAAA,EAAoB;AACtB,UAAIA,IAAI,GAAGV,OAAO,CAAlB,kBAAA;;AAEA,aAAA,IAAA,EAAa;AACX,YAAIU,IAAI,CAAJA,OAAAA,CAAJ,QAAIA,CAAJ,EAA4B;AAC1B,iBAAO,CAAP,IAAO,CAAP;AACD;;AAEDA,QAAAA,IAAI,GAAGA,IAAI,CAAXA,kBAAAA;AACD;;AAED,aAAA,EAAA;AAlDmB,KAAA;;AAqDrBC,IAAAA,iBAAiB,CAAA,OAAA,EAAU;AACzB,YAAMC,UAAU,GAAG,CAAA,GAAA,EAAA,QAAA,EAAA,OAAA,EAAA,UAAA,EAAA,QAAA,EAAA,SAAA,EAAA,YAAA,EAAA,0BAAA,EAAA,GAAA,CASbC,QAAQ,IAAOA,GAAAA,QATF,uBAAA,EAAA,IAAA,CAAnB,GAAmB,CAAnB;AAWA,aAAO,KAAA,IAAA,CAAA,UAAA,EAAA,OAAA,EAAA,MAAA,CAAsCC,EAAE,IAAI,CAACC,KAAAA,CAAAA,UAAAA,CAAD,EAACA,CAAD,IAAmBC,KAAAA,CAAAA,SAAAA,CAAtE,EAAsEA,CAA/D,CAAP;AACD;;AAlEoB,GAAvB","sourcesContent":["/**\n * --------------------------------------------------------------------------\n * Bootstrap (v5.2.3): dom/selector-engine.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nimport { isDisabled, isVisible } from '../util/index'\n\n/**\n * Constants\n */\n\nconst SelectorEngine = {\n  find(selector, element = document.documentElement) {\n    return [].concat(...Element.prototype.querySelectorAll.call(element, selector))\n  },\n\n  findOne(selector, element = document.documentElement) {\n    return Element.prototype.querySelector.call(element, selector)\n  },\n\n  children(element, selector) {\n    return [].concat(...element.children).filter(child => child.matches(selector))\n  },\n\n  parents(element, selector) {\n    const parents = []\n    let ancestor = element.parentNode.closest(selector)\n\n    while (ancestor) {\n      parents.push(ancestor)\n      ancestor = ancestor.parentNode.closest(selector)\n    }\n\n    return parents\n  },\n\n  prev(element, selector) {\n    let previous = element.previousElementSibling\n\n    while (previous) {\n      if (previous.matches(selector)) {\n        return [previous]\n      }\n\n      previous = previous.previousElementSibling\n    }\n\n    return []\n  },\n  // TODO: this is now unused; remove later along with prev()\n  next(element, selector) {\n    let next = element.nextElementSibling\n\n    while (next) {\n      if (next.matches(selector)) {\n        return [next]\n      }\n\n      next = next.nextElementSibling\n    }\n\n    return []\n  },\n\n  focusableChildren(element) {\n    const focusables = [\n      'a',\n      'button',\n      'input',\n      'textarea',\n      'select',\n      'details',\n      '[tabindex]',\n      '[contenteditable=\"true\"]'\n    ].map(selector => `${selector}:not([tabindex^=\"-\"])`).join(',')\n\n    return this.find(focusables, element).filter(el => !isDisabled(el) && isVisible(el))\n  }\n}\n\nexport default SelectorEngine\n"]},"metadata":{},"sourceType":"script"}