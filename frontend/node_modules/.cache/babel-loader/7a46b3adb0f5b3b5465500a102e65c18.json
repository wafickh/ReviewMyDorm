{"ast":null,"code":"/*!\n  * Bootstrap scrollbar.js v5.2.3 (https://getbootstrap.com/)\n  * Copyright 2011-2022 The Bootstrap Authors (https://github.com/twbs/bootstrap/graphs/contributors)\n  * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n  */\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('../dom/selector-engine'), require('../dom/manipulator'), require('./index')) : typeof define === 'function' && define.amd ? define(['../dom/selector-engine', '../dom/manipulator', './index'], factory) : (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.Scrollbar = factory(global.SelectorEngine, global.Manipulator, global.Index));\n})(this, function (SelectorEngine, Manipulator, index) {\n  'use strict';\n\n  const _interopDefaultLegacy = e => e && typeof e === 'object' && 'default' in e ? e : {\n    default: e\n  };\n\n  const SelectorEngine__default = /*#__PURE__*/_interopDefaultLegacy(SelectorEngine);\n\n  const Manipulator__default = /*#__PURE__*/_interopDefaultLegacy(Manipulator);\n  /**\n   * --------------------------------------------------------------------------\n   * Bootstrap (v5.2.3): util/scrollBar.js\n   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n   * --------------------------------------------------------------------------\n   */\n\n  /**\n   * Constants\n   */\n\n\n  const SELECTOR_FIXED_CONTENT = '.fixed-top, .fixed-bottom, .is-fixed, .sticky-top';\n  const SELECTOR_STICKY_CONTENT = '.sticky-top';\n  const PROPERTY_PADDING = 'padding-right';\n  const PROPERTY_MARGIN = 'margin-right';\n  /**\n   * Class definition\n   */\n\n  class ScrollBarHelper {\n    constructor() {\n      this._element = document.body;\n    } // Public\n\n\n    getWidth() {\n      // https://developer.mozilla.org/en-US/docs/Web/API/Window/innerWidth#usage_notes\n      const documentWidth = document.documentElement.clientWidth;\n      return Math.abs(window.innerWidth - documentWidth);\n    }\n\n    hide() {\n      const width = this.getWidth();\n\n      this._disableOverFlow(); // give padding to element to balance the hidden scrollbar width\n\n\n      this._setElementAttributes(this._element, PROPERTY_PADDING, calculatedValue => calculatedValue + width); // trick: We adjust positive paddingRight and negative marginRight to sticky-top elements to keep showing fullwidth\n\n\n      this._setElementAttributes(SELECTOR_FIXED_CONTENT, PROPERTY_PADDING, calculatedValue => calculatedValue + width);\n\n      this._setElementAttributes(SELECTOR_STICKY_CONTENT, PROPERTY_MARGIN, calculatedValue => calculatedValue - width);\n    }\n\n    reset() {\n      this._resetElementAttributes(this._element, 'overflow');\n\n      this._resetElementAttributes(this._element, PROPERTY_PADDING);\n\n      this._resetElementAttributes(SELECTOR_FIXED_CONTENT, PROPERTY_PADDING);\n\n      this._resetElementAttributes(SELECTOR_STICKY_CONTENT, PROPERTY_MARGIN);\n    }\n\n    isOverflowing() {\n      return this.getWidth() > 0;\n    } // Private\n\n\n    _disableOverFlow() {\n      this._saveInitialAttribute(this._element, 'overflow');\n\n      this._element.style.overflow = 'hidden';\n    }\n\n    _setElementAttributes(selector, styleProperty, callback) {\n      const scrollbarWidth = this.getWidth();\n\n      const manipulationCallBack = element => {\n        if (element !== this._element && window.innerWidth > element.clientWidth + scrollbarWidth) {\n          return;\n        }\n\n        this._saveInitialAttribute(element, styleProperty);\n\n        const calculatedValue = window.getComputedStyle(element).getPropertyValue(styleProperty);\n        element.style.setProperty(styleProperty, `${callback(Number.parseFloat(calculatedValue))}px`);\n      };\n\n      this._applyManipulationCallback(selector, manipulationCallBack);\n    }\n\n    _saveInitialAttribute(element, styleProperty) {\n      const actualValue = element.style.getPropertyValue(styleProperty);\n\n      if (actualValue) {\n        Manipulator__default.default.setDataAttribute(element, styleProperty, actualValue);\n      }\n    }\n\n    _resetElementAttributes(selector, styleProperty) {\n      const manipulationCallBack = element => {\n        const value = Manipulator__default.default.getDataAttribute(element, styleProperty); // We only want to remove the property if the value is `null`; the value can also be zero\n\n        if (value === null) {\n          element.style.removeProperty(styleProperty);\n          return;\n        }\n\n        Manipulator__default.default.removeDataAttribute(element, styleProperty);\n        element.style.setProperty(styleProperty, value);\n      };\n\n      this._applyManipulationCallback(selector, manipulationCallBack);\n    }\n\n    _applyManipulationCallback(selector, callBack) {\n      if (index.isElement(selector)) {\n        callBack(selector);\n        return;\n      }\n\n      for (const sel of SelectorEngine__default.default.find(selector, this._element)) {\n        callBack(sel);\n      }\n    }\n\n  }\n\n  return ScrollBarHelper;\n});","map":{"version":3,"sources":["../../src/util/scrollbar.js"],"names":["SELECTOR_FIXED_CONTENT","SELECTOR_STICKY_CONTENT","PROPERTY_PADDING","PROPERTY_MARGIN","constructor","document","getWidth","documentWidth","Math","window","hide","width","calculatedValue","reset","isOverflowing","_disableOverFlow","_setElementAttributes","scrollbarWidth","manipulationCallBack","element","callback","Number","_saveInitialAttribute","actualValue","Manipulator","_resetElementAttributes","value","_applyManipulationCallback","isElement","callBack","SelectorEngine"],"mappings":"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","sourcesContent":["/**\n * --------------------------------------------------------------------------\n * Bootstrap (v5.2.3): util/scrollBar.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nimport SelectorEngine from '../dom/selector-engine'\nimport Manipulator from '../dom/manipulator'\nimport { isElement } from './index'\n\n/**\n * Constants\n */\n\nconst SELECTOR_FIXED_CONTENT = '.fixed-top, .fixed-bottom, .is-fixed, .sticky-top'\nconst SELECTOR_STICKY_CONTENT = '.sticky-top'\nconst PROPERTY_PADDING = 'padding-right'\nconst PROPERTY_MARGIN = 'margin-right'\n\n/**\n * Class definition\n */\n\nclass ScrollBarHelper {\n  constructor() {\n    this._element = document.body\n  }\n\n  // Public\n  getWidth() {\n    // https://developer.mozilla.org/en-US/docs/Web/API/Window/innerWidth#usage_notes\n    const documentWidth = document.documentElement.clientWidth\n    return Math.abs(window.innerWidth - documentWidth)\n  }\n\n  hide() {\n    const width = this.getWidth()\n    this._disableOverFlow()\n    // give padding to element to balance the hidden scrollbar width\n    this._setElementAttributes(this._element, PROPERTY_PADDING, calculatedValue => calculatedValue + width)\n    // trick: We adjust positive paddingRight and negative marginRight to sticky-top elements to keep showing fullwidth\n    this._setElementAttributes(SELECTOR_FIXED_CONTENT, PROPERTY_PADDING, calculatedValue => calculatedValue + width)\n    this._setElementAttributes(SELECTOR_STICKY_CONTENT, PROPERTY_MARGIN, calculatedValue => calculatedValue - width)\n  }\n\n  reset() {\n    this._resetElementAttributes(this._element, 'overflow')\n    this._resetElementAttributes(this._element, PROPERTY_PADDING)\n    this._resetElementAttributes(SELECTOR_FIXED_CONTENT, PROPERTY_PADDING)\n    this._resetElementAttributes(SELECTOR_STICKY_CONTENT, PROPERTY_MARGIN)\n  }\n\n  isOverflowing() {\n    return this.getWidth() > 0\n  }\n\n  // Private\n  _disableOverFlow() {\n    this._saveInitialAttribute(this._element, 'overflow')\n    this._element.style.overflow = 'hidden'\n  }\n\n  _setElementAttributes(selector, styleProperty, callback) {\n    const scrollbarWidth = this.getWidth()\n    const manipulationCallBack = element => {\n      if (element !== this._element && window.innerWidth > element.clientWidth + scrollbarWidth) {\n        return\n      }\n\n      this._saveInitialAttribute(element, styleProperty)\n      const calculatedValue = window.getComputedStyle(element).getPropertyValue(styleProperty)\n      element.style.setProperty(styleProperty, `${callback(Number.parseFloat(calculatedValue))}px`)\n    }\n\n    this._applyManipulationCallback(selector, manipulationCallBack)\n  }\n\n  _saveInitialAttribute(element, styleProperty) {\n    const actualValue = element.style.getPropertyValue(styleProperty)\n    if (actualValue) {\n      Manipulator.setDataAttribute(element, styleProperty, actualValue)\n    }\n  }\n\n  _resetElementAttributes(selector, styleProperty) {\n    const manipulationCallBack = element => {\n      const value = Manipulator.getDataAttribute(element, styleProperty)\n      // We only want to remove the property if the value is `null`; the value can also be zero\n      if (value === null) {\n        element.style.removeProperty(styleProperty)\n        return\n      }\n\n      Manipulator.removeDataAttribute(element, styleProperty)\n      element.style.setProperty(styleProperty, value)\n    }\n\n    this._applyManipulationCallback(selector, manipulationCallBack)\n  }\n\n  _applyManipulationCallback(selector, callBack) {\n    if (isElement(selector)) {\n      callBack(selector)\n      return\n    }\n\n    for (const sel of SelectorEngine.find(selector, this._element)) {\n      callBack(sel)\n    }\n  }\n}\n\nexport default ScrollBarHelper\n"]},"metadata":{},"sourceType":"script"}