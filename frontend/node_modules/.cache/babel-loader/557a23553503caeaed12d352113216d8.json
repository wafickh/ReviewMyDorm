{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\OneDrive\\\\Desktop\\\\WebCourse\\\\DormCritique\\\\frontend\\\\src\\\\pages\\\\AdminRev\\\\AdminRev.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport { Link, useNavigate, useLocation, Navigate } from \"react-router-dom\";\nimport * as actionType from '../../constants/actionTypes';\nimport { useDispatch } from 'react-redux';\nimport { useSelector } from 'react-redux';\nimport { getAllReviews } from '../../actions/reviews';\nimport decode from 'jwt-decode';\nimport Navbar from '../../components/navbar/Navbar';\nimport '../Admin/Admin.css';\nimport './AdminRev.css';\nimport SideMenu from '../../components/SideMenu/SideMenu';\nimport AdminTable from '../../components/Table/Table';\nimport { updatereview } from '../../actions/approvereview';\nexport default function AdminRev() {\n  const [user, setUser] = useState(JSON.parse(localStorage.getItem('profile')));\n  const dispatch = useDispatch();\n  const location = useLocation();\n  const history = useNavigate();\n  const reviews = useSelector(state => state.reviews);\n  console.log(reviews);\n\n  const logout = () => {\n    dispatch({\n      type: actionType.LOGOUT\n    });\n    setUser(null);\n    history.push('/auth');\n  };\n\n  useEffect(() => {\n    if (!user || user.result.email !== \"wafic@hotmail.com\") {\n      history('/auth');\n    }\n\n    dispatch(getAllReviews());\n  }, [location]);\n  let ii = 0;\n\n  const handlebutt = () => {\n    history(`/Admin/Dorms`);\n  };\n\n  const handlebuttt = () => {\n    history(`/Admin/Reviews`);\n  };\n\n  const handlebutttt = () => {\n    history(`/Admin/Users`);\n  };\n\n  const [currentPage, setCurrentPage] = useState(1);\n  const ROWS_PER_PAGE = 10;\n  const startIndex = (currentPage - 1) * ROWS_PER_PAGE;\n  const endIndex = startIndex + ROWS_PER_PAGE; // Render only the rows for the current page\n\n  const dormsTodoDisplay = reviews.slice(startIndex, endIndex); // Function to handle \"Next\" button click\n\n  const handleNext = () => {\n    setCurrentPage(currentPage + 1);\n  }; // Function to handle \"Previous\" button click\n\n\n  const handlePrevious = () => {\n    setCurrentPage(currentPage - 1);\n  };\n\n  const updatebutt = async (id, dormid) => {\n    try {\n      await dispatch(updatereview(id, dormid));\n      window.location.reload();\n    } catch (error) {\n      console.error('Error updating dorm:', error);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Navbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }), user.result.email === \"wafic@hotmail.com\" ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Appp\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"navnav\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"titt\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 29\n    }\n  }, \"Admin Dashboard\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"butt1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"butty\",\n    onClick: () => handlebutt(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 33\n    }\n  }, \"Dorms\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"butt1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"butty\",\n    onClick: () => handlebuttt(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 33\n    }\n  }, \"Reviews\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"butt1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"butty\",\n    onClick: () => handlebutttt(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 33\n    }\n  }, \"Users\"))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"table\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 41\n    }\n  }, \"#\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 41\n    }\n  }, \"User\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 41\n    }\n  }, \"Dorm\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 41\n    }\n  }, \"Rating\"), /*#__PURE__*/React.createElement(\"th\", {\n    className: \"smallcoll\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 41\n    }\n  }, \"Review\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 41\n    }\n  }, \"Action\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 33\n    }\n  }, dormsTodoDisplay.map((value, index) => {\n    {\n      /* ii = ii + 1; */\n    }\n    const ii = startIndex + index + 1;\n    return /*#__PURE__*/React.createElement(\"tr\", {\n      key: ii,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 49\n      }\n    }, ii), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 49\n      }\n    }, value.User), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 49\n      }\n    }, value.Dorm), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 49\n      }\n    }, value.Rating), /*#__PURE__*/React.createElement(\"td\", {\n      className: \"smallcol\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 49\n      }\n    }, value.Review), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"approve-button\",\n      onClick: () => updatebutt(value._id, value.Dorm),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 53\n      }\n    }, \"Approve\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"delete-button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 103\n      }\n    }, \"Delete\")));\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"buttcen\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"buttri\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 33\n    }\n  }, currentPage > 1 && /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handlePrevious,\n    className: \"butbut\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 41\n    }\n  }, \"Previous\")), endIndex < reviews.length && /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleNext,\n    className: \"butbut\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 37\n    }\n  }, \"Next\"))))) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"center\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 25\n    }\n  }, \"This Page does not exist\"))));\n}","map":{"version":3,"sources":["C:/Users/USER/OneDrive/Desktop/WebCourse/DormCritique/frontend/src/pages/AdminRev/AdminRev.jsx"],"names":["React","useState","useEffect","Link","useNavigate","useLocation","Navigate","actionType","useDispatch","useSelector","getAllReviews","decode","Navbar","SideMenu","AdminTable","updatereview","AdminRev","user","setUser","JSON","parse","localStorage","getItem","dispatch","location","history","reviews","state","console","log","logout","type","LOGOUT","push","result","email","ii","handlebutt","handlebuttt","handlebutttt","currentPage","setCurrentPage","ROWS_PER_PAGE","startIndex","endIndex","dormsTodoDisplay","slice","handleNext","handlePrevious","updatebutt","id","dormid","window","reload","error","map","value","index","User","Dorm","Rating","Review","_id","length"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { Link, useNavigate, useLocation, Navigate } from \"react-router-dom\"\r\nimport * as actionType from '../../constants/actionTypes';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useSelector } from 'react-redux'\r\nimport { getAllReviews } from '../../actions/reviews';\r\nimport decode from 'jwt-decode';\r\nimport Navbar from '../../components/navbar/Navbar'\r\nimport '../Admin/Admin.css'\r\nimport './AdminRev.css'\r\nimport SideMenu from '../../components/SideMenu/SideMenu';\r\nimport AdminTable from '../../components/Table/Table';\r\nimport { updatereview } from '../../actions/approvereview';\r\nexport default function AdminRev() {\r\n    const [user, setUser] = useState(JSON.parse(localStorage.getItem('profile')));\r\n    const dispatch = useDispatch();\r\n    const location = useLocation();\r\n    const history = useNavigate();\r\n    const reviews = useSelector((state) => state.reviews)\r\n    console.log(reviews)\r\n\r\n\r\n    const logout = () => {\r\n        dispatch({ type: actionType.LOGOUT });\r\n        setUser(null);\r\n        history.push('/auth');\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (!user || user.result.email !== \"wafic@hotmail.com\") {\r\n            history('/auth')\r\n        }\r\n\r\n        dispatch(getAllReviews());\r\n    }, [location]);\r\n    let ii = 0;\r\n    const handlebutt = () => {\r\n        history(`/Admin/Dorms`)\r\n    }\r\n    const handlebuttt = () => {\r\n        history(`/Admin/Reviews`)\r\n    }\r\n    const handlebutttt = () => {\r\n        history(`/Admin/Users`)\r\n    }\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const ROWS_PER_PAGE = 10;\r\n    const startIndex = (currentPage - 1) * ROWS_PER_PAGE;\r\n    const endIndex = startIndex + ROWS_PER_PAGE;\r\n\r\n    // Render only the rows for the current page\r\n    const dormsTodoDisplay = reviews.slice(startIndex, endIndex);\r\n\r\n    // Function to handle \"Next\" button click\r\n    const handleNext = () => {\r\n        setCurrentPage(currentPage + 1);\r\n    };\r\n\r\n    // Function to handle \"Previous\" button click\r\n    const handlePrevious = () => {\r\n        setCurrentPage(currentPage - 1);\r\n    };\r\n\r\n    const updatebutt = async (id,dormid) => {\r\n        try {\r\n            await dispatch(updatereview(id,dormid))\r\n          \r\n           window.location.reload();\r\n\r\n        } catch (error) {\r\n            console.error('Error updating dorm:', error);\r\n        }\r\n    }\r\n    \r\n\r\n\r\n    return (\r\n        <div>\r\n\r\n            <Navbar />\r\n\r\n            {user.result.email === \"wafic@hotmail.com\" ? (\r\n                <>\r\n                    {/* <div className='Appp'>\r\n                            <SideMenu />\r\n                            <PageContent />\r\n                    </div> */}\r\n                    <div className='Appp'>\r\n                        <div className='navnav'>\r\n                            <div className='titt'>Admin Dashboard</div>\r\n                            <div className=\"butt1\">\r\n                                <button className='butty' onClick={() =>\r\n                                    handlebutt()}>Dorms</button>\r\n                            </div>\r\n                            <div className=\"butt1\">\r\n                                <button className='butty' onClick={() =>\r\n                                    handlebuttt()}>Reviews</button>\r\n                            </div>\r\n                            <div className=\"butt1\">\r\n                                <button className='butty' onClick={() =>\r\n                                    handlebutttt()}>Users</button>\r\n                            </div>\r\n                            {/* <p>Get Users (delete users)</p>\r\n                        <p>Get Dorms (display dorms that are not yet approved) you can delete or update/approve a dorm</p>\r\n                        <p>Get all schools get all dorms then filter to get the unapproved</p>\r\n                        <p>Get Reviews (get all not approved reviews) delete or approve/update </p>\r\n                         */}\r\n\r\n\r\n                        </div>\r\n                        <div>\r\n                            <table>\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>#</th>\r\n                                        <th>User</th>\r\n                                        <th>Dorm</th>\r\n                                        <th>Rating</th>\r\n                                        <th className='smallcoll'>Review</th>\r\n                                        <th>Action</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {dormsTodoDisplay.map((value, index) => {\r\n                                        {/* ii = ii + 1; */ }\r\n                                        const ii = startIndex + index + 1;\r\n\r\n                                        return (\r\n                                            <tr key={ii}>\r\n                                                <td>{ii}</td>\r\n                                                <td>{value.User}</td>\r\n                                                <td>{value.Dorm}</td>\r\n                                                <td>{value.Rating}</td>\r\n                                                <td className='smallcol'>{value.Review}</td>\r\n                                                <td><button className=\"approve-button\" onClick={() =>\r\n                                                    updatebutt(value._id,value.Dorm)}>Approve</button><button className=\"delete-button\">Delete</button></td>\r\n                                            </tr>\r\n                                        )\r\n                                    })}\r\n\r\n                                </tbody>\r\n                            </table>\r\n                            <div className='buttcen'>\r\n                                <span className=\"buttri\">\r\n                                    {currentPage > 1 && (\r\n                                        <button onClick={handlePrevious} className='butbut'>Previous</button>\r\n                                    )}</span>\r\n                                {/* Render \"Next\" button if there are more rows */}\r\n                                {endIndex < reviews.length && (\r\n                                    <button onClick={handleNext} className='butbut'>Next</button>\r\n                                )}\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n\r\n                    </div>\r\n                </>\r\n            ) : (<>\r\n                <center><h1>This Page does not exist</h1></center>\r\n            </>)}\r\n\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}