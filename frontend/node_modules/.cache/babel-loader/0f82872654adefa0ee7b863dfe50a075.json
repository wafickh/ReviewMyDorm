{"ast":null,"code":"import { useContext, useMemo, useEffect } from 'react';\nimport { MapContext } from './map';\n\nfunction useControl(onCreate, arg1, arg2, arg3) {\n  const context = useContext(MapContext);\n  const ctrl = useMemo(() => onCreate(context), []);\n  useEffect(() => {\n    const opts = arg3 || arg2 || arg1;\n    const onAdd = typeof arg1 === 'function' && typeof arg2 === 'function' ? arg1 : null;\n    const onRemove = typeof arg2 === 'function' ? arg2 : typeof arg1 === 'function' ? arg1 : null;\n    const {\n      map\n    } = context;\n\n    if (!map.hasControl(ctrl)) {\n      map.addControl(ctrl, opts === null || opts === void 0 ? void 0 : opts.position);\n\n      if (onAdd) {\n        onAdd(context);\n      }\n    }\n\n    return () => {\n      if (onRemove) {\n        onRemove(context);\n      } // Map might have been removed (parent effects are destroyed before child ones)\n\n\n      if (map.hasControl(ctrl)) {\n        map.removeControl(ctrl);\n      }\n    };\n  }, []);\n  return ctrl;\n}\n\nexport default useControl;","map":{"version":3,"sources":["../../../src/components/use-control.ts"],"names":[],"mappings":"AAAA,SAAQ,UAAR,EAAoB,OAApB,EAA6B,SAA7B,QAA6C,OAA7C;AAEA,SAAQ,UAAR,QAAyB,OAAzB;;AAyBA,SAAS,UAAT,CACE,QADF,EAEE,IAFF,EAGE,IAHF,EAIE,IAJF,EAIuB;AAErB,QAAM,OAAO,GAAG,UAAU,CAAC,UAAD,CAA1B;AACA,QAAM,IAAI,GAAG,OAAO,CAAC,MAAM,QAAQ,CAAC,OAAD,CAAf,EAA0B,EAA1B,CAApB;AAEA,EAAA,SAAS,CAAC,MAAK;AACb,UAAM,IAAI,GAAI,IAAI,IAAI,IAAR,IAAgB,IAA9B;AACA,UAAM,KAAK,GAAG,OAAO,IAAP,KAAgB,UAAhB,IAA8B,OAAO,IAAP,KAAgB,UAA9C,GAA2D,IAA3D,GAAkE,IAAhF;AACA,UAAM,QAAQ,GAAG,OAAO,IAAP,KAAgB,UAAhB,GAA6B,IAA7B,GAAoC,OAAO,IAAP,KAAgB,UAAhB,GAA6B,IAA7B,GAAoC,IAAzF;AAEA,UAAM;AAAC,MAAA;AAAD,QAAQ,OAAd;;AACA,QAAI,CAAC,GAAG,CAAC,UAAJ,CAAe,IAAf,CAAL,EAA2B;AACzB,MAAA,GAAG,CAAC,UAAJ,CAAe,IAAf,EAAqB,IAAI,KAAA,IAAJ,IAAA,IAAI,KAAA,KAAA,CAAJ,GAAI,KAAA,CAAJ,GAAA,IAAI,CAAE,QAA3B;;AACA,UAAI,KAAJ,EAAW;AACT,QAAA,KAAK,CAAC,OAAD,CAAL;AACD;AACF;;AAED,WAAO,MAAK;AACV,UAAI,QAAJ,EAAc;AACZ,QAAA,QAAQ,CAAC,OAAD,CAAR;AACD,OAHS,CAIV;;;AACA,UAAI,GAAG,CAAC,UAAJ,CAAe,IAAf,CAAJ,EAA0B;AACxB,QAAA,GAAG,CAAC,aAAJ,CAAkB,IAAlB;AACD;AACF,KARD;AASD,GAtBQ,EAsBN,EAtBM,CAAT;AAwBA,SAAO,IAAP;AACD;;AAED,eAAe,UAAf","sourceRoot":"","sourcesContent":["import { useContext, useMemo, useEffect } from 'react';\nimport { MapContext } from './map';\nfunction useControl(onCreate, arg1, arg2, arg3) {\n    const context = useContext(MapContext);\n    const ctrl = useMemo(() => onCreate(context), []);\n    useEffect(() => {\n        const opts = (arg3 || arg2 || arg1);\n        const onAdd = typeof arg1 === 'function' && typeof arg2 === 'function' ? arg1 : null;\n        const onRemove = typeof arg2 === 'function' ? arg2 : typeof arg1 === 'function' ? arg1 : null;\n        const { map } = context;\n        if (!map.hasControl(ctrl)) {\n            map.addControl(ctrl, opts === null || opts === void 0 ? void 0 : opts.position);\n            if (onAdd) {\n                onAdd(context);\n            }\n        }\n        return () => {\n            if (onRemove) {\n                onRemove(context);\n            }\n            // Map might have been removed (parent effects are destroyed before child ones)\n            if (map.hasControl(ctrl)) {\n                map.removeControl(ctrl);\n            }\n        };\n    }, []);\n    return ctrl;\n}\nexport default useControl;\n//# sourceMappingURL=use-control.js.map"]},"metadata":{},"sourceType":"module"}