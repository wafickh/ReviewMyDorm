{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\OneDrive\\\\Desktop\\\\WebCourse\\\\DormCritique\\\\frontend\\\\src\\\\pages\\\\AdminUser\\\\AdminUser.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport { Link, useNavigate, useLocation, Navigate } from \"react-router-dom\";\nimport * as actionType from '../../constants/actionTypes';\nimport { useDispatch } from 'react-redux';\nimport { useSelector } from 'react-redux';\nimport { getAllReviews } from '../../actions/reviews';\nimport decode from 'jwt-decode';\nimport { allusers } from '../../actions/users';\nimport Navbar from '../../components/navbar/Navbar';\nimport '../Admin/Admin.css';\nexport default function AdminRev() {\n  const [user, setUser] = useState(JSON.parse(localStorage.getItem('profile')));\n  const dispatch = useDispatch();\n  const location = useLocation();\n  const history = useNavigate();\n  const users = useSelector(state => state.users);\n  console.log(users);\n\n  const logout = () => {\n    dispatch({\n      type: actionType.LOGOUT\n    });\n    setUser(null);\n    history.push('/auth');\n  };\n\n  useEffect(() => {\n    if (!user || user.result.email !== \"wafic@hotmail.com\") {\n      history('/auth');\n    }\n\n    dispatch(allusers());\n  }, [location]);\n  let ii = 0;\n\n  const handlebutt = () => {\n    history(`/Admin/Dorms`);\n  };\n\n  const handlebuttt = () => {\n    history(`/Admin/Reviews`);\n  };\n\n  const handlebutttt = () => {\n    history(`/Admin/Users`);\n  };\n\n  const [currentPage, setCurrentPage] = useState(1);\n  const ROWS_PER_PAGE = 10;\n  const startIndex = (currentPage - 1) * ROWS_PER_PAGE;\n  const endIndex = startIndex + ROWS_PER_PAGE; // Render only the rows for the current page\n\n  const xxxxxxxx = users.slice(startIndex, endIndex).reverse();\n  const dormsTodoDisplay = users.slice(startIndex, endIndex); // Function to handle \"Next\" button click\n\n  const handleNext = () => {\n    setCurrentPage(currentPage + 1);\n  }; // Function to handle \"Previous\" button click\n\n\n  const handlePrevious = () => {\n    setCurrentPage(currentPage - 1);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Navbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }), user.result.email === \"wafic@hotmail.com\" && user.result.verified === true ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Appp\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"navnav\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"titt\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 29\n    }\n  }, \"Admin Dashboard\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"butt1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"butty\",\n    onClick: () => handlebutt(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 33\n    }\n  }, \"Dorms\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"butt1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"butty\",\n    onClick: () => handlebuttt(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 33\n    }\n  }, \"Reviews\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"butt1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"butty\",\n    onClick: () => handlebutttt(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 33\n    }\n  }, \"Users\"))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"table\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 41\n    }\n  }, \"#\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 41\n    }\n  }, \"ID\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 41\n    }\n  }, \"Name\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 41\n    }\n  }, \"Email\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 33\n    }\n  }, dormsTodoDisplay.map((value, index) => {\n    {\n      /* ii = ii + 1; */\n    }\n    const ii = startIndex + index + 1;\n    return /*#__PURE__*/React.createElement(\"tr\", {\n      key: ii,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 49\n      }\n    }, ii), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 49\n      }\n    }, value._id), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 49\n      }\n    }, value.name), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 49\n      }\n    }, value.email));\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"buttcen\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"buttri\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 33\n    }\n  }, currentPage > 1 && /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handlePrevious,\n    className: \"butbut\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 41\n    }\n  }, \"Previous\")), endIndex < users.length && /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleNext,\n    className: \"butbut\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 37\n    }\n  }, \"Next\"))))) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"center\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 25\n    }\n  }, \"This Page does not exist\"))));\n}","map":{"version":3,"sources":["C:/Users/USER/OneDrive/Desktop/WebCourse/DormCritique/frontend/src/pages/AdminUser/AdminUser.jsx"],"names":["React","useState","useEffect","Link","useNavigate","useLocation","Navigate","actionType","useDispatch","useSelector","getAllReviews","decode","allusers","Navbar","AdminRev","user","setUser","JSON","parse","localStorage","getItem","dispatch","location","history","users","state","console","log","logout","type","LOGOUT","push","result","email","ii","handlebutt","handlebuttt","handlebutttt","currentPage","setCurrentPage","ROWS_PER_PAGE","startIndex","endIndex","xxxxxxxx","slice","reverse","dormsTodoDisplay","handleNext","handlePrevious","verified","map","value","index","_id","name","length"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { Link, useNavigate, useLocation, Navigate } from \"react-router-dom\"\r\nimport * as actionType from '../../constants/actionTypes';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useSelector } from 'react-redux'\r\nimport { getAllReviews } from '../../actions/reviews';\r\nimport decode from 'jwt-decode';\r\nimport { allusers } from '../../actions/users';\r\nimport Navbar from '../../components/navbar/Navbar'\r\nimport '../Admin/Admin.css'\r\nexport default function AdminRev() {\r\n    const [user, setUser] = useState(JSON.parse(localStorage.getItem('profile')));\r\n    const dispatch = useDispatch();\r\n    const location = useLocation();\r\n    const history = useNavigate();\r\n    const users = useSelector((state) => state.users)\r\n    console.log(users)\r\n\r\n    const logout = () => {\r\n        dispatch({ type: actionType.LOGOUT });\r\n        setUser(null);\r\n        history.push('/auth');\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (!user || user.result.email !== \"wafic@hotmail.com\") {\r\n            history('/auth')\r\n        }\r\n\r\n        dispatch(allusers());\r\n    }, [location]);\r\n    let ii = 0;\r\n    const handlebutt = () => {\r\n        history(`/Admin/Dorms`)\r\n    }\r\n    const handlebuttt = () => {\r\n        history(`/Admin/Reviews`)\r\n    }\r\n    const handlebutttt = () => {\r\n        history(`/Admin/Users`)\r\n    }\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const ROWS_PER_PAGE = 10;\r\n    const startIndex = (currentPage - 1) * ROWS_PER_PAGE;\r\n    const endIndex = startIndex + ROWS_PER_PAGE;\r\n\r\n    // Render only the rows for the current page\r\n    const xxxxxxxx = users.slice(startIndex, endIndex).reverse();\r\n    const dormsTodoDisplay = users.slice(startIndex, endIndex);\r\n    \r\n\r\n    // Function to handle \"Next\" button click\r\n    const handleNext = () => {\r\n        setCurrentPage(currentPage + 1);\r\n    };\r\n\r\n    // Function to handle \"Previous\" button click\r\n    const handlePrevious = () => {\r\n        setCurrentPage(currentPage - 1);\r\n    };\r\n\r\n\r\n    return (\r\n        <div>\r\n\r\n            <Navbar />\r\n\r\n            {user.result.email === \"wafic@hotmail.com\" && user.result.verified === true ? (\r\n                <>\r\n                    \r\n                    <div className='Appp'>\r\n                        <div className='navnav'>\r\n                            <div className='titt'>Admin Dashboard</div>\r\n                            <div className=\"butt1\">\r\n                                <button className='butty' onClick={() =>\r\n                                    handlebutt()}>Dorms</button>\r\n                            </div>\r\n                            <div className=\"butt1\">\r\n                                <button className='butty' onClick={() =>\r\n                                    handlebuttt()}>Reviews</button>\r\n                            </div>\r\n                            <div className=\"butt1\">\r\n                                <button className='butty' onClick={() =>\r\n                                    handlebutttt()}>Users</button>\r\n                            </div>\r\n                            {/* <p>Get Users (delete users)</p>\r\n                        <p>Get Dorms (display dorms that are not yet approved) you can delete or update/approve a dorm</p>\r\n                        <p>Get all schools get all dorms then filter to get the unapproved</p>\r\n                        <p>Get Reviews (get all not approved reviews) delete or approve/update </p>\r\n                         */}\r\n\r\n\r\n                        </div>\r\n                        <div>\r\n                            <table>\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>#</th>\r\n                                        <th>ID</th>\r\n                                        <th>Name</th>\r\n                                        <th>Email</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {dormsTodoDisplay.map((value,index) => {\r\n                                        {/* ii = ii + 1; */}\r\n                                        const ii = startIndex + index + 1;\r\n\r\n                                        return (\r\n                                            <tr key={ii}>\r\n                                                <td>{ii}</td>\r\n                                                <td>{value._id}</td>\r\n                                                <td>{value.name}</td>\r\n                                                <td>{value.email}</td>\r\n\r\n                                                {/* <td>{value.User}</td>\r\n                                                <td>{value.Dorm}</td>\r\n                                                <td className='smallcol'>{value.Review}rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr</td>\r\n                                                <td><button className=\"approve-button\">Approve</button><button className=\"delete-button\">Delete</button></td> */}\r\n                                            </tr>\r\n                                        )\r\n                                    })}\r\n\r\n                                </tbody>\r\n                            </table>\r\n                            <div className='buttcen'>\r\n                                <span className=\"buttri\">\r\n                                    {currentPage > 1 && (\r\n                                        <button onClick={handlePrevious} className='butbut'>Previous</button>\r\n                                    )}</span>\r\n                                {/* Render \"Next\" button if there are more rows */}\r\n                                {endIndex < users.length && (\r\n                                    <button onClick={handleNext} className='butbut'>Next</button>\r\n                                )}\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n\r\n                    </div>\r\n                </>\r\n            ) : (<>\r\n                <center><h1>This Page does not exist</h1></center>\r\n            </>)}\r\n\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}