{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\OneDrive\\\\Desktop\\\\WebCourse\\\\DormCritique\\\\frontend\\\\src\\\\components\\\\Auth\\\\Input.js\";\nimport React from 'react';\nimport { TextField, Grid, InputAdornment, IconButton } from '@material-ui/core';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\nconst focusedColor = \"orange\";\nconst useStyles = makeStyles({\n  root: {\n    // input label when focused\n    \"& label.Mui-focused\": {\n      color: focusedColor\n    },\n    // focused color for input with variant='standard'\n    \"& .MuiInput-underline:after\": {\n      borderBottomColor: focusedColor\n    },\n    // focused color for input with variant='filled'\n    \"& .MuiFilledInput-underline:after\": {\n      borderBottomColor: focusedColor\n    },\n    // focused color for input with variant='outlined'\n    \"& .MuiOutlinedInput-root\": {\n      \"&.Mui-focused fieldset\": {\n        borderColor: focusedColor\n      }\n    }\n  }\n});\n\nconst Input = ({\n  name,\n  handleChange,\n  label,\n  half,\n  autoFocus,\n  type,\n  handleShowPassword\n}) => /*#__PURE__*/React.createElement(Grid, {\n  item: true,\n  xs: 12,\n  sm: half ? 6 : 12,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(TextField, {\n  sx: style,\n  name: name,\n  onChange: handleChange,\n  variant: \"filled\",\n  required: true,\n  autoComplete: \"off\",\n  fullWidth: true,\n  label: label,\n  autoFocus: autoFocus,\n  type: type,\n  InputProps: name === 'password' ? {\n    endAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n      position: \"end\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(IconButton, {\n      onClick: handleShowPassword,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 25\n      }\n    }, type === 'password' ? /*#__PURE__*/React.createElement(Visibility, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 52\n      }\n    }) : /*#__PURE__*/React.createElement(VisibilityOff, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 69\n      }\n    })))\n  } : null,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }\n}));\n\nexport default Input;","map":{"version":3,"sources":["C:/Users/USER/OneDrive/Desktop/WebCourse/DormCritique/frontend/src/components/Auth/Input.js"],"names":["React","TextField","Grid","InputAdornment","IconButton","Visibility","VisibilityOff","focusedColor","useStyles","makeStyles","root","color","borderBottomColor","borderColor","Input","name","handleChange","label","half","autoFocus","type","handleShowPassword","style","endAdornment"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,IAApB,EAA0BC,cAA1B,EAA0CC,UAA1C,QAA4D,mBAA5D;AAEA,OAAOC,UAAP,MAAuB,+BAAvB;AACA,OAAOC,aAAP,MAA0B,kCAA1B;AACA,MAAMC,YAAY,GAAG,QAArB;AACA,MAAMC,SAAS,GAAGC,UAAU,CAAC;AACzBC,EAAAA,IAAI,EAAE;AACF;AACA,2BAAuB;AACnBC,MAAAA,KAAK,EAAEJ;AADY,KAFrB;AAKF;AACA,mCAA+B;AAC3BK,MAAAA,iBAAiB,EAAEL;AADQ,KAN7B;AASF;AACA,yCAAqC;AACjCK,MAAAA,iBAAiB,EAAEL;AADc,KAVnC;AAaF;AACA,gCAA4B;AACxB,gCAA0B;AACtBM,QAAAA,WAAW,EAAEN;AADS;AADF;AAd1B;AADmB,CAAD,CAA5B;;AAsBA,MAAMO,KAAK,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,YAAR;AAAsBC,EAAAA,KAAtB;AAA6BC,EAAAA,IAA7B;AAAmCC,EAAAA,SAAnC;AAA8CC,EAAAA,IAA9C;AAAoDC,EAAAA;AAApD,CAAD,kBAEV,oBAAC,IAAD;AAAM,EAAA,IAAI,MAAV;AAAW,EAAA,EAAE,EAAE,EAAf;AAAmB,EAAA,EAAE,EAAEH,IAAI,GAAG,CAAH,GAAO,EAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACI,oBAAC,SAAD;AACI,EAAA,EAAE,EAAEI,KADR;AAEI,EAAA,IAAI,EAAEP,IAFV;AAGI,EAAA,QAAQ,EAAEC,YAHd;AAII,EAAA,OAAO,EAAC,QAJZ;AAKI,EAAA,QAAQ,MALZ;AAMI,EAAA,YAAY,EAAC,KANjB;AAOK,EAAA,SAAS,MAPd;AAQI,EAAA,KAAK,EAAEC,KARX;AASI,EAAA,SAAS,EAAEE,SATf;AAUI,EAAA,IAAI,EAAEC,IAVV;AAWI,EAAA,UAAU,EAAEL,IAAI,KAAK,UAAT,GAAsB;AAC9BQ,IAAAA,YAAY,eACR,oBAAC,cAAD;AAAgB,MAAA,QAAQ,EAAC,KAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,UAAD;AAAY,MAAA,OAAO,EAAEF,kBAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKD,IAAI,KAAK,UAAT,gBAAsB,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAtB,gBAAuC,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAD5C,CADJ;AAF0B,GAAtB,GAQR,IAnBR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADJ,CAFJ;;AA2BA,eAAeN,KAAf","sourcesContent":["import React from 'react';\r\nimport { TextField, Grid, InputAdornment, IconButton } from '@material-ui/core';\r\n\r\nimport Visibility from '@material-ui/icons/Visibility';\r\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\r\nconst focusedColor = \"orange\";\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        // input label when focused\r\n        \"& label.Mui-focused\": {\r\n            color: focusedColor\r\n        },\r\n        // focused color for input with variant='standard'\r\n        \"& .MuiInput-underline:after\": {\r\n            borderBottomColor: focusedColor\r\n        },\r\n        // focused color for input with variant='filled'\r\n        \"& .MuiFilledInput-underline:after\": {\r\n            borderBottomColor: focusedColor\r\n        },\r\n        // focused color for input with variant='outlined'\r\n        \"& .MuiOutlinedInput-root\": {\r\n            \"&.Mui-focused fieldset\": {\r\n                borderColor: focusedColor\r\n            }\r\n        }\r\n    }\r\n});\r\nconst Input = ({ name, handleChange, label, half, autoFocus, type, handleShowPassword }) => (\r\n    \r\n    <Grid item xs={12} sm={half ? 6 : 12}>\r\n        <TextField\r\n            sx={style}\r\n            name={name}\r\n            onChange={handleChange}\r\n            variant=\"filled\"\r\n            required\r\n            autoComplete='off'\r\n             fullWidth\r\n            label={label}\r\n            autoFocus={autoFocus}\r\n            type={type}\r\n            InputProps={name === 'password' ? {\r\n                endAdornment: (\r\n                    <InputAdornment position=\"end\">\r\n                        <IconButton onClick={handleShowPassword}>\r\n                            {type === 'password' ? <Visibility /> : <VisibilityOff />}\r\n                        </IconButton>\r\n                    </InputAdornment>\r\n                ),\r\n            } : null}\r\n        />\r\n    </Grid>\r\n);\r\n\r\nexport default Input;"]},"metadata":{},"sourceType":"module"}