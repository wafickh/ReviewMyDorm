{"ast":null,"code":"/*!\n  * Bootstrap offcanvas.js v5.2.3 (https://getbootstrap.com/)\n  * Copyright 2011-2022 The Bootstrap Authors (https://github.com/twbs/bootstrap/graphs/contributors)\n  * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n  */\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('./util/index'), require('./util/scrollbar'), require('./dom/event-handler'), require('./base-component'), require('./dom/selector-engine'), require('./util/backdrop'), require('./util/focustrap'), require('./util/component-functions')) : typeof define === 'function' && define.amd ? define(['./util/index', './util/scrollbar', './dom/event-handler', './base-component', './dom/selector-engine', './util/backdrop', './util/focustrap', './util/component-functions'], factory) : (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.Offcanvas = factory(global.Index, global.Scrollbar, global.EventHandler, global.BaseComponent, global.SelectorEngine, global.Backdrop, global.Focustrap, global.ComponentFunctions));\n})(this, function (index, ScrollBarHelper, EventHandler, BaseComponent, SelectorEngine, Backdrop, FocusTrap, componentFunctions) {\n  'use strict';\n\n  const _interopDefaultLegacy = e => e && typeof e === 'object' && 'default' in e ? e : {\n    default: e\n  };\n\n  const ScrollBarHelper__default = /*#__PURE__*/_interopDefaultLegacy(ScrollBarHelper);\n\n  const EventHandler__default = /*#__PURE__*/_interopDefaultLegacy(EventHandler);\n\n  const BaseComponent__default = /*#__PURE__*/_interopDefaultLegacy(BaseComponent);\n\n  const SelectorEngine__default = /*#__PURE__*/_interopDefaultLegacy(SelectorEngine);\n\n  const Backdrop__default = /*#__PURE__*/_interopDefaultLegacy(Backdrop);\n\n  const FocusTrap__default = /*#__PURE__*/_interopDefaultLegacy(FocusTrap);\n  /**\n   * --------------------------------------------------------------------------\n   * Bootstrap (v5.2.3): offcanvas.js\n   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n   * --------------------------------------------------------------------------\n   */\n\n  /**\n   * Constants\n   */\n\n\n  const NAME = 'offcanvas';\n  const DATA_KEY = 'bs.offcanvas';\n  const EVENT_KEY = `.${DATA_KEY}`;\n  const DATA_API_KEY = '.data-api';\n  const EVENT_LOAD_DATA_API = `load${EVENT_KEY}${DATA_API_KEY}`;\n  const ESCAPE_KEY = 'Escape';\n  const CLASS_NAME_SHOW = 'show';\n  const CLASS_NAME_SHOWING = 'showing';\n  const CLASS_NAME_HIDING = 'hiding';\n  const CLASS_NAME_BACKDROP = 'offcanvas-backdrop';\n  const OPEN_SELECTOR = '.offcanvas.show';\n  const EVENT_SHOW = `show${EVENT_KEY}`;\n  const EVENT_SHOWN = `shown${EVENT_KEY}`;\n  const EVENT_HIDE = `hide${EVENT_KEY}`;\n  const EVENT_HIDE_PREVENTED = `hidePrevented${EVENT_KEY}`;\n  const EVENT_HIDDEN = `hidden${EVENT_KEY}`;\n  const EVENT_RESIZE = `resize${EVENT_KEY}`;\n  const EVENT_CLICK_DATA_API = `click${EVENT_KEY}${DATA_API_KEY}`;\n  const EVENT_KEYDOWN_DISMISS = `keydown.dismiss${EVENT_KEY}`;\n  const SELECTOR_DATA_TOGGLE = '[data-bs-toggle=\"offcanvas\"]';\n  const Default = {\n    backdrop: true,\n    keyboard: true,\n    scroll: false\n  };\n  const DefaultType = {\n    backdrop: '(boolean|string)',\n    keyboard: 'boolean',\n    scroll: 'boolean'\n  };\n  /**\n   * Class definition\n   */\n\n  class Offcanvas extends BaseComponent__default.default {\n    constructor(element, config) {\n      super(element, config);\n      this._isShown = false;\n      this._backdrop = this._initializeBackDrop();\n      this._focustrap = this._initializeFocusTrap();\n\n      this._addEventListeners();\n    } // Getters\n\n\n    static get Default() {\n      return Default;\n    }\n\n    static get DefaultType() {\n      return DefaultType;\n    }\n\n    static get NAME() {\n      return NAME;\n    } // Public\n\n\n    toggle(relatedTarget) {\n      return this._isShown ? this.hide() : this.show(relatedTarget);\n    }\n\n    show(relatedTarget) {\n      if (this._isShown) {\n        return;\n      }\n\n      const showEvent = EventHandler__default.default.trigger(this._element, EVENT_SHOW, {\n        relatedTarget\n      });\n\n      if (showEvent.defaultPrevented) {\n        return;\n      }\n\n      this._isShown = true;\n\n      this._backdrop.show();\n\n      if (!this._config.scroll) {\n        new ScrollBarHelper__default.default().hide();\n      }\n\n      this._element.setAttribute('aria-modal', true);\n\n      this._element.setAttribute('role', 'dialog');\n\n      this._element.classList.add(CLASS_NAME_SHOWING);\n\n      const completeCallBack = () => {\n        if (!this._config.scroll || this._config.backdrop) {\n          this._focustrap.activate();\n        }\n\n        this._element.classList.add(CLASS_NAME_SHOW);\n\n        this._element.classList.remove(CLASS_NAME_SHOWING);\n\n        EventHandler__default.default.trigger(this._element, EVENT_SHOWN, {\n          relatedTarget\n        });\n      };\n\n      this._queueCallback(completeCallBack, this._element, true);\n    }\n\n    hide() {\n      if (!this._isShown) {\n        return;\n      }\n\n      const hideEvent = EventHandler__default.default.trigger(this._element, EVENT_HIDE);\n\n      if (hideEvent.defaultPrevented) {\n        return;\n      }\n\n      this._focustrap.deactivate();\n\n      this._element.blur();\n\n      this._isShown = false;\n\n      this._element.classList.add(CLASS_NAME_HIDING);\n\n      this._backdrop.hide();\n\n      const completeCallback = () => {\n        this._element.classList.remove(CLASS_NAME_SHOW, CLASS_NAME_HIDING);\n\n        this._element.removeAttribute('aria-modal');\n\n        this._element.removeAttribute('role');\n\n        if (!this._config.scroll) {\n          new ScrollBarHelper__default.default().reset();\n        }\n\n        EventHandler__default.default.trigger(this._element, EVENT_HIDDEN);\n      };\n\n      this._queueCallback(completeCallback, this._element, true);\n    }\n\n    dispose() {\n      this._backdrop.dispose();\n\n      this._focustrap.deactivate();\n\n      super.dispose();\n    } // Private\n\n\n    _initializeBackDrop() {\n      const clickCallback = () => {\n        if (this._config.backdrop === 'static') {\n          EventHandler__default.default.trigger(this._element, EVENT_HIDE_PREVENTED);\n          return;\n        }\n\n        this.hide();\n      }; // 'static' option will be translated to true, and booleans will keep their value\n\n\n      const isVisible = Boolean(this._config.backdrop);\n      return new Backdrop__default.default({\n        className: CLASS_NAME_BACKDROP,\n        isVisible,\n        isAnimated: true,\n        rootElement: this._element.parentNode,\n        clickCallback: isVisible ? clickCallback : null\n      });\n    }\n\n    _initializeFocusTrap() {\n      return new FocusTrap__default.default({\n        trapElement: this._element\n      });\n    }\n\n    _addEventListeners() {\n      EventHandler__default.default.on(this._element, EVENT_KEYDOWN_DISMISS, event => {\n        if (event.key !== ESCAPE_KEY) {\n          return;\n        }\n\n        if (!this._config.keyboard) {\n          EventHandler__default.default.trigger(this._element, EVENT_HIDE_PREVENTED);\n          return;\n        }\n\n        this.hide();\n      });\n    } // Static\n\n\n    static jQueryInterface(config) {\n      return this.each(function () {\n        const data = Offcanvas.getOrCreateInstance(this, config);\n\n        if (typeof config !== 'string') {\n          return;\n        }\n\n        if (data[config] === undefined || config.startsWith('_') || config === 'constructor') {\n          throw new TypeError(`No method named \"${config}\"`);\n        }\n\n        data[config](this);\n      });\n    }\n\n  }\n  /**\n   * Data API implementation\n   */\n\n\n  EventHandler__default.default.on(document, EVENT_CLICK_DATA_API, SELECTOR_DATA_TOGGLE, function (event) {\n    const target = index.getElementFromSelector(this);\n\n    if (['A', 'AREA'].includes(this.tagName)) {\n      event.preventDefault();\n    }\n\n    if (index.isDisabled(this)) {\n      return;\n    }\n\n    EventHandler__default.default.one(target, EVENT_HIDDEN, () => {\n      // focus on trigger when it is closed\n      if (index.isVisible(this)) {\n        this.focus();\n      }\n    }); // avoid conflict when clicking a toggler of an offcanvas, while another is open\n\n    const alreadyOpen = SelectorEngine__default.default.findOne(OPEN_SELECTOR);\n\n    if (alreadyOpen && alreadyOpen !== target) {\n      Offcanvas.getInstance(alreadyOpen).hide();\n    }\n\n    const data = Offcanvas.getOrCreateInstance(target);\n    data.toggle(this);\n  });\n  EventHandler__default.default.on(window, EVENT_LOAD_DATA_API, () => {\n    for (const selector of SelectorEngine__default.default.find(OPEN_SELECTOR)) {\n      Offcanvas.getOrCreateInstance(selector).show();\n    }\n  });\n  EventHandler__default.default.on(window, EVENT_RESIZE, () => {\n    for (const element of SelectorEngine__default.default.find('[aria-modal][class*=show][class*=offcanvas-]')) {\n      if (getComputedStyle(element).position !== 'fixed') {\n        Offcanvas.getOrCreateInstance(element).hide();\n      }\n    }\n  });\n  componentFunctions.enableDismissTrigger(Offcanvas);\n  /**\n   * jQuery\n   */\n\n  index.defineJQueryPlugin(Offcanvas);\n  return Offcanvas;\n});","map":{"version":3,"sources":["../src/offcanvas.js"],"names":["NAME","DATA_KEY","EVENT_KEY","DATA_API_KEY","EVENT_LOAD_DATA_API","ESCAPE_KEY","CLASS_NAME_SHOW","CLASS_NAME_SHOWING","CLASS_NAME_HIDING","CLASS_NAME_BACKDROP","OPEN_SELECTOR","EVENT_SHOW","EVENT_SHOWN","EVENT_HIDE","EVENT_HIDE_PREVENTED","EVENT_HIDDEN","EVENT_RESIZE","EVENT_CLICK_DATA_API","EVENT_KEYDOWN_DISMISS","SELECTOR_DATA_TOGGLE","Default","backdrop","keyboard","scroll","DefaultType","BaseComponent","constructor","toggle","show","showEvent","relatedTarget","ScrollBarHelper","completeCallBack","EventHandler","hide","hideEvent","completeCallback","dispose","_initializeBackDrop","clickCallback","isVisible","Boolean","Backdrop","className","isAnimated","rootElement","_initializeFocusTrap","FocusTrap","trapElement","_element","_addEventListeners","event","jQueryInterface","data","Offcanvas","config","target","getElementFromSelector","isDisabled","alreadyOpen","SelectorEngine","getComputedStyle","enableDismissTrigger","defineJQueryPlugin"],"mappings":"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","sourcesContent":["/**\n * --------------------------------------------------------------------------\n * Bootstrap (v5.2.3): offcanvas.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nimport {\n  defineJQueryPlugin,\n  getElementFromSelector,\n  isDisabled,\n  isVisible\n} from './util/index'\nimport ScrollBarHelper from './util/scrollbar'\nimport EventHandler from './dom/event-handler'\nimport BaseComponent from './base-component'\nimport SelectorEngine from './dom/selector-engine'\nimport Backdrop from './util/backdrop'\nimport FocusTrap from './util/focustrap'\nimport { enableDismissTrigger } from './util/component-functions'\n\n/**\n * Constants\n */\n\nconst NAME = 'offcanvas'\nconst DATA_KEY = 'bs.offcanvas'\nconst EVENT_KEY = `.${DATA_KEY}`\nconst DATA_API_KEY = '.data-api'\nconst EVENT_LOAD_DATA_API = `load${EVENT_KEY}${DATA_API_KEY}`\nconst ESCAPE_KEY = 'Escape'\n\nconst CLASS_NAME_SHOW = 'show'\nconst CLASS_NAME_SHOWING = 'showing'\nconst CLASS_NAME_HIDING = 'hiding'\nconst CLASS_NAME_BACKDROP = 'offcanvas-backdrop'\nconst OPEN_SELECTOR = '.offcanvas.show'\n\nconst EVENT_SHOW = `show${EVENT_KEY}`\nconst EVENT_SHOWN = `shown${EVENT_KEY}`\nconst EVENT_HIDE = `hide${EVENT_KEY}`\nconst EVENT_HIDE_PREVENTED = `hidePrevented${EVENT_KEY}`\nconst EVENT_HIDDEN = `hidden${EVENT_KEY}`\nconst EVENT_RESIZE = `resize${EVENT_KEY}`\nconst EVENT_CLICK_DATA_API = `click${EVENT_KEY}${DATA_API_KEY}`\nconst EVENT_KEYDOWN_DISMISS = `keydown.dismiss${EVENT_KEY}`\n\nconst SELECTOR_DATA_TOGGLE = '[data-bs-toggle=\"offcanvas\"]'\n\nconst Default = {\n  backdrop: true,\n  keyboard: true,\n  scroll: false\n}\n\nconst DefaultType = {\n  backdrop: '(boolean|string)',\n  keyboard: 'boolean',\n  scroll: 'boolean'\n}\n\n/**\n * Class definition\n */\n\nclass Offcanvas extends BaseComponent {\n  constructor(element, config) {\n    super(element, config)\n\n    this._isShown = false\n    this._backdrop = this._initializeBackDrop()\n    this._focustrap = this._initializeFocusTrap()\n    this._addEventListeners()\n  }\n\n  // Getters\n  static get Default() {\n    return Default\n  }\n\n  static get DefaultType() {\n    return DefaultType\n  }\n\n  static get NAME() {\n    return NAME\n  }\n\n  // Public\n  toggle(relatedTarget) {\n    return this._isShown ? this.hide() : this.show(relatedTarget)\n  }\n\n  show(relatedTarget) {\n    if (this._isShown) {\n      return\n    }\n\n    const showEvent = EventHandler.trigger(this._element, EVENT_SHOW, { relatedTarget })\n\n    if (showEvent.defaultPrevented) {\n      return\n    }\n\n    this._isShown = true\n    this._backdrop.show()\n\n    if (!this._config.scroll) {\n      new ScrollBarHelper().hide()\n    }\n\n    this._element.setAttribute('aria-modal', true)\n    this._element.setAttribute('role', 'dialog')\n    this._element.classList.add(CLASS_NAME_SHOWING)\n\n    const completeCallBack = () => {\n      if (!this._config.scroll || this._config.backdrop) {\n        this._focustrap.activate()\n      }\n\n      this._element.classList.add(CLASS_NAME_SHOW)\n      this._element.classList.remove(CLASS_NAME_SHOWING)\n      EventHandler.trigger(this._element, EVENT_SHOWN, { relatedTarget })\n    }\n\n    this._queueCallback(completeCallBack, this._element, true)\n  }\n\n  hide() {\n    if (!this._isShown) {\n      return\n    }\n\n    const hideEvent = EventHandler.trigger(this._element, EVENT_HIDE)\n\n    if (hideEvent.defaultPrevented) {\n      return\n    }\n\n    this._focustrap.deactivate()\n    this._element.blur()\n    this._isShown = false\n    this._element.classList.add(CLASS_NAME_HIDING)\n    this._backdrop.hide()\n\n    const completeCallback = () => {\n      this._element.classList.remove(CLASS_NAME_SHOW, CLASS_NAME_HIDING)\n      this._element.removeAttribute('aria-modal')\n      this._element.removeAttribute('role')\n\n      if (!this._config.scroll) {\n        new ScrollBarHelper().reset()\n      }\n\n      EventHandler.trigger(this._element, EVENT_HIDDEN)\n    }\n\n    this._queueCallback(completeCallback, this._element, true)\n  }\n\n  dispose() {\n    this._backdrop.dispose()\n    this._focustrap.deactivate()\n    super.dispose()\n  }\n\n  // Private\n  _initializeBackDrop() {\n    const clickCallback = () => {\n      if (this._config.backdrop === 'static') {\n        EventHandler.trigger(this._element, EVENT_HIDE_PREVENTED)\n        return\n      }\n\n      this.hide()\n    }\n\n    // 'static' option will be translated to true, and booleans will keep their value\n    const isVisible = Boolean(this._config.backdrop)\n\n    return new Backdrop({\n      className: CLASS_NAME_BACKDROP,\n      isVisible,\n      isAnimated: true,\n      rootElement: this._element.parentNode,\n      clickCallback: isVisible ? clickCallback : null\n    })\n  }\n\n  _initializeFocusTrap() {\n    return new FocusTrap({\n      trapElement: this._element\n    })\n  }\n\n  _addEventListeners() {\n    EventHandler.on(this._element, EVENT_KEYDOWN_DISMISS, event => {\n      if (event.key !== ESCAPE_KEY) {\n        return\n      }\n\n      if (!this._config.keyboard) {\n        EventHandler.trigger(this._element, EVENT_HIDE_PREVENTED)\n        return\n      }\n\n      this.hide()\n    })\n  }\n\n  // Static\n  static jQueryInterface(config) {\n    return this.each(function () {\n      const data = Offcanvas.getOrCreateInstance(this, config)\n\n      if (typeof config !== 'string') {\n        return\n      }\n\n      if (data[config] === undefined || config.startsWith('_') || config === 'constructor') {\n        throw new TypeError(`No method named \"${config}\"`)\n      }\n\n      data[config](this)\n    })\n  }\n}\n\n/**\n * Data API implementation\n */\n\nEventHandler.on(document, EVENT_CLICK_DATA_API, SELECTOR_DATA_TOGGLE, function (event) {\n  const target = getElementFromSelector(this)\n\n  if (['A', 'AREA'].includes(this.tagName)) {\n    event.preventDefault()\n  }\n\n  if (isDisabled(this)) {\n    return\n  }\n\n  EventHandler.one(target, EVENT_HIDDEN, () => {\n    // focus on trigger when it is closed\n    if (isVisible(this)) {\n      this.focus()\n    }\n  })\n\n  // avoid conflict when clicking a toggler of an offcanvas, while another is open\n  const alreadyOpen = SelectorEngine.findOne(OPEN_SELECTOR)\n  if (alreadyOpen && alreadyOpen !== target) {\n    Offcanvas.getInstance(alreadyOpen).hide()\n  }\n\n  const data = Offcanvas.getOrCreateInstance(target)\n  data.toggle(this)\n})\n\nEventHandler.on(window, EVENT_LOAD_DATA_API, () => {\n  for (const selector of SelectorEngine.find(OPEN_SELECTOR)) {\n    Offcanvas.getOrCreateInstance(selector).show()\n  }\n})\n\nEventHandler.on(window, EVENT_RESIZE, () => {\n  for (const element of SelectorEngine.find('[aria-modal][class*=show][class*=offcanvas-]')) {\n    if (getComputedStyle(element).position !== 'fixed') {\n      Offcanvas.getOrCreateInstance(element).hide()\n    }\n  }\n})\n\nenableDismissTrigger(Offcanvas)\n\n/**\n * jQuery\n */\n\ndefineJQueryPlugin(Offcanvas)\n\nexport default Offcanvas\n"]},"metadata":{},"sourceType":"script"}