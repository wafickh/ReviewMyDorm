{"ast":null,"code":"/*!\n  * Bootstrap base-component.js v5.2.3 (https://getbootstrap.com/)\n  * Copyright 2011-2022 The Bootstrap Authors (https://github.com/twbs/bootstrap/graphs/contributors)\n  * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n  */\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('./dom/data'), require('./util/index'), require('./dom/event-handler'), require('./util/config')) : typeof define === 'function' && define.amd ? define(['./dom/data', './util/index', './dom/event-handler', './util/config'], factory) : (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.BaseComponent = factory(global.Data, global.Index, global.EventHandler, global.Config));\n})(this, function (Data, index, EventHandler, Config) {\n  'use strict';\n\n  const _interopDefaultLegacy = e => e && typeof e === 'object' && 'default' in e ? e : {\n    default: e\n  };\n\n  const Data__default = /*#__PURE__*/_interopDefaultLegacy(Data);\n\n  const EventHandler__default = /*#__PURE__*/_interopDefaultLegacy(EventHandler);\n\n  const Config__default = /*#__PURE__*/_interopDefaultLegacy(Config);\n  /**\n   * --------------------------------------------------------------------------\n   * Bootstrap (v5.2.3): base-component.js\n   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n   * --------------------------------------------------------------------------\n   */\n\n  /**\n   * Constants\n   */\n\n\n  const VERSION = '5.2.3';\n  /**\n   * Class definition\n   */\n\n  class BaseComponent extends Config__default.default {\n    constructor(element, config) {\n      super();\n      element = index.getElement(element);\n\n      if (!element) {\n        return;\n      }\n\n      this._element = element;\n      this._config = this._getConfig(config);\n      Data__default.default.set(this._element, this.constructor.DATA_KEY, this);\n    } // Public\n\n\n    dispose() {\n      Data__default.default.remove(this._element, this.constructor.DATA_KEY);\n      EventHandler__default.default.off(this._element, this.constructor.EVENT_KEY);\n\n      for (const propertyName of Object.getOwnPropertyNames(this)) {\n        this[propertyName] = null;\n      }\n    }\n\n    _queueCallback(callback, element, isAnimated = true) {\n      index.executeAfterTransition(callback, element, isAnimated);\n    }\n\n    _getConfig(config) {\n      config = this._mergeConfigObj(config, this._element);\n      config = this._configAfterMerge(config);\n\n      this._typeCheckConfig(config);\n\n      return config;\n    } // Static\n\n\n    static getInstance(element) {\n      return Data__default.default.get(index.getElement(element), this.DATA_KEY);\n    }\n\n    static getOrCreateInstance(element, config = {}) {\n      return this.getInstance(element) || new this(element, typeof config === 'object' ? config : null);\n    }\n\n    static get VERSION() {\n      return VERSION;\n    }\n\n    static get DATA_KEY() {\n      return `bs.${this.NAME}`;\n    }\n\n    static get EVENT_KEY() {\n      return `.${this.DATA_KEY}`;\n    }\n\n    static eventName(name) {\n      return `${name}${this.EVENT_KEY}`;\n    }\n\n  }\n\n  return BaseComponent;\n});","map":{"version":3,"sources":["../src/base-component.js"],"names":["VERSION","Config","constructor","element","getElement","Data","dispose","EventHandler","Object","_queueCallback","isAnimated","executeAfterTransition","_getConfig","config","getInstance","getOrCreateInstance","DATA_KEY","NAME","EVENT_KEY","eventName","name"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;;;;;;;AAYA;;;;;AAIA,QAAMA,OAAO,GAAb,OAAA;AAEA;;;;AAIA,QAAA,aAAA,SAA4BC,eAAAA,CAA5B,OAAA,CAAmC;AACjCC,IAAAA,WAAW,CAAA,OAAA,EAAA,MAAA,EAAkB;AAC3B;AAEAC,MAAAA,OAAO,GAAGC,KAAAA,CAAAA,UAAAA,CAAVD,OAAUC,CAAVD;;AACA,UAAI,CAAJ,OAAA,EAAc;AACZ;AACD;;AAED,WAAA,QAAA,GAAA,OAAA;AACA,WAAA,OAAA,GAAe,KAAA,UAAA,CAAf,MAAe,CAAf;AAEAE,MAAAA,aAAAA,CAAAA,OAAAA,CAAAA,GAAAA,CAAS,KAATA,QAAAA,EAAwB,KAAA,WAAA,CAAxBA,QAAAA,EAAAA,IAAAA;AAZ+B,KAAA,CAAA;;;AAgBjCC,IAAAA,OAAO,GAAG;AACRD,MAAAA,aAAAA,CAAAA,OAAAA,CAAAA,MAAAA,CAAY,KAAZA,QAAAA,EAA2B,KAAA,WAAA,CAA3BA,QAAAA;AACAE,MAAAA,qBAAAA,CAAAA,OAAAA,CAAAA,GAAAA,CAAiB,KAAjBA,QAAAA,EAAgC,KAAA,WAAA,CAAhCA,SAAAA;;AAEA,WAAK,MAAL,YAAA,IAA2BC,MAAM,CAANA,mBAAAA,CAA3B,IAA2BA,CAA3B,EAA6D;AAC3D,aAAA,YAAA,IAAA,IAAA;AACD;AACF;;AAEDC,IAAAA,cAAc,CAAA,QAAA,EAAA,OAAA,EAAoBC,UAAU,GAA9B,IAAA,EAAuC;AACnDC,MAAAA,KAAAA,CAAAA,sBAAAA,CAAsB,QAAtBA,EAAsB,OAAtBA,EAAAA,UAAAA;AACD;;AAEDC,IAAAA,UAAU,CAAA,MAAA,EAAS;AACjBC,MAAAA,MAAM,GAAG,KAAA,eAAA,CAAA,MAAA,EAA6B,KAAtCA,QAAS,CAATA;AACAA,MAAAA,MAAM,GAAG,KAAA,iBAAA,CAATA,MAAS,CAATA;;AACA,WAAA,gBAAA,CAAA,MAAA;;AACA,aAAA,MAAA;AAjC+B,KAAA,CAAA;;;AAqCf,WAAXC,WAAW,CAAA,OAAA,EAAU;AAC1B,aAAOT,aAAAA,CAAAA,OAAAA,CAAAA,GAAAA,CAASD,KAAAA,CAAAA,UAAAA,CAATC,OAASD,CAATC,EAA8B,KAArC,QAAOA,CAAP;AACD;;AAEyB,WAAnBU,mBAAmB,CAAA,OAAA,EAAUF,MAAM,GAAhB,EAAA,EAAuB;AAC/C,aAAO,KAAA,WAAA,CAAA,OAAA,KAA6B,IAAA,IAAA,CAAA,OAAA,EAAkB,OAAA,MAAA,KAAA,QAAA,GAAA,MAAA,GAAtD,IAAoC,CAApC;AACD;;AAEiB,eAAPb,OAAO,GAAG;AACnB,aAAA,OAAA;AACD;;AAEkB,eAARgB,QAAQ,GAAG;AACpB,aAAQ,MAAK,KAAKC,IAAlB,EAAA;AACD;;AAEmB,eAATC,SAAS,GAAG;AACrB,aAAQ,IAAG,KAAKF,QAAhB,EAAA;AACD;;AAEe,WAATG,SAAS,CAAA,IAAA,EAAO;AACrB,aAAUC,GAAAA,IAAO,GAAA,KAAKF,SAAtB,EAAA;AACD;;AA3DgC","sourcesContent":["/**\n * --------------------------------------------------------------------------\n * Bootstrap (v5.2.3): base-component.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nimport Data from './dom/data'\nimport { executeAfterTransition, getElement } from './util/index'\nimport EventHandler from './dom/event-handler'\nimport Config from './util/config'\n\n/**\n * Constants\n */\n\nconst VERSION = '5.2.3'\n\n/**\n * Class definition\n */\n\nclass BaseComponent extends Config {\n  constructor(element, config) {\n    super()\n\n    element = getElement(element)\n    if (!element) {\n      return\n    }\n\n    this._element = element\n    this._config = this._getConfig(config)\n\n    Data.set(this._element, this.constructor.DATA_KEY, this)\n  }\n\n  // Public\n  dispose() {\n    Data.remove(this._element, this.constructor.DATA_KEY)\n    EventHandler.off(this._element, this.constructor.EVENT_KEY)\n\n    for (const propertyName of Object.getOwnPropertyNames(this)) {\n      this[propertyName] = null\n    }\n  }\n\n  _queueCallback(callback, element, isAnimated = true) {\n    executeAfterTransition(callback, element, isAnimated)\n  }\n\n  _getConfig(config) {\n    config = this._mergeConfigObj(config, this._element)\n    config = this._configAfterMerge(config)\n    this._typeCheckConfig(config)\n    return config\n  }\n\n  // Static\n  static getInstance(element) {\n    return Data.get(getElement(element), this.DATA_KEY)\n  }\n\n  static getOrCreateInstance(element, config = {}) {\n    return this.getInstance(element) || new this(element, typeof config === 'object' ? config : null)\n  }\n\n  static get VERSION() {\n    return VERSION\n  }\n\n  static get DATA_KEY() {\n    return `bs.${this.NAME}`\n  }\n\n  static get EVENT_KEY() {\n    return `.${this.DATA_KEY}`\n  }\n\n  static eventName(name) {\n    return `${name}${this.EVENT_KEY}`\n  }\n}\n\nexport default BaseComponent\n"]},"metadata":{},"sourceType":"script"}