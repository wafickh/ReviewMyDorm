{"ast":null,"code":"/*!\n  * Bootstrap base-component.js v5.2.3 (https://getbootstrap.com/)\n  * Copyright 2011-2022 The Bootstrap Authors (https://github.com/twbs/bootstrap/graphs/contributors)\n  * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n  */\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('./dom/data'), require('./util/index'), require('./dom/event-handler'), require('./util/config')) : typeof define === 'function' && define.amd ? define(['./dom/data', './util/index', './dom/event-handler', './util/config'], factory) : (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.BaseComponent = factory(global.Data, global.Index, global.EventHandler, global.Config));\n})(this, function (Data, index, EventHandler, Config) {\n  'use strict';\n\n  const _interopDefaultLegacy = e => e && typeof e === 'object' && 'default' in e ? e : {\n    default: e\n  };\n\n  const Data__default = /*#__PURE__*/_interopDefaultLegacy(Data);\n\n  const EventHandler__default = /*#__PURE__*/_interopDefaultLegacy(EventHandler);\n\n  const Config__default = /*#__PURE__*/_interopDefaultLegacy(Config);\n  /**\n   * --------------------------------------------------------------------------\n   * Bootstrap (v5.2.3): base-component.js\n   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n   * --------------------------------------------------------------------------\n   */\n\n  /**\n   * Constants\n   */\n\n\n  const VERSION = '5.2.3';\n  /**\n   * Class definition\n   */\n\n  class BaseComponent extends Config__default.default {\n    constructor(element, config) {\n      super();\n      element = index.getElement(element);\n\n      if (!element) {\n        return;\n      }\n\n      this._element = element;\n      this._config = this._getConfig(config);\n      Data__default.default.set(this._element, this.constructor.DATA_KEY, this);\n    } // Public\n\n\n    dispose() {\n      Data__default.default.remove(this._element, this.constructor.DATA_KEY);\n      EventHandler__default.default.off(this._element, this.constructor.EVENT_KEY);\n\n      for (const propertyName of Object.getOwnPropertyNames(this)) {\n        this[propertyName] = null;\n      }\n    }\n\n    _queueCallback(callback, element) {\n      let isAnimated = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n      index.executeAfterTransition(callback, element, isAnimated);\n    }\n\n    _getConfig(config) {\n      config = this._mergeConfigObj(config, this._element);\n      config = this._configAfterMerge(config);\n\n      this._typeCheckConfig(config);\n\n      return config;\n    } // Static\n\n\n    static getInstance(element) {\n      return Data__default.default.get(index.getElement(element), this.DATA_KEY);\n    }\n\n    static getOrCreateInstance(element) {\n      let config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      return this.getInstance(element) || new this(element, typeof config === 'object' ? config : null);\n    }\n\n    static get VERSION() {\n      return VERSION;\n    }\n\n    static get DATA_KEY() {\n      return `bs.${this.NAME}`;\n    }\n\n    static get EVENT_KEY() {\n      return `.${this.DATA_KEY}`;\n    }\n\n    static eventName(name) {\n      return `${name}${this.EVENT_KEY}`;\n    }\n\n  }\n\n  return BaseComponent;\n});","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;AAAA;;;;;;;AAYA;;;;;AAIA,QAAMA,OAAO,GAAG,OAAhB;AAEA;;;;AAIA,QAAMC,aAAN,SAA4BC,uBAA5B,CAAmC;AACjCC,eAAW,CAACC,OAAD,EAAUC,MAAV,EAAkB;AAC3B;AAEAD,aAAO,GAAGE,iBAAWF,OAAXE,CAAVF;;AACA,UAAI,CAACA,OAAL,EAAc;AACZ;AACD;;AAED,WAAKG,QAAL,GAAgBH,OAAhB;AACA,WAAKI,OAAL,GAAe,KAAKC,UAAL,CAAgBJ,MAAhB,CAAf;AAEAK,4BAAKC,GAALD,CAAS,KAAKH,QAAdG,EAAwB,KAAKP,WAAL,CAAiBS,QAAzCF,EAAmD,IAAnDA;AAZ+B;;;AAgBjCG,WAAO,GAAG;AACRH,4BAAKI,MAALJ,CAAY,KAAKH,QAAjBG,EAA2B,KAAKP,WAAL,CAAiBS,QAA5CF;AACAK,oCAAaC,GAAbD,CAAiB,KAAKR,QAAtBQ,EAAgC,KAAKZ,WAAL,CAAiBc,SAAjDF;;AAEA,WAAK,MAAMG,YAAX,IAA2BC,MAAM,CAACC,mBAAPD,CAA2B,IAA3BA,CAA3B,EAA6D;AAC3D,aAAKD,YAAL,IAAqB,IAArB;AACD;AACF;;AAEDG,kBAAc,CAACC,QAAD,EAAWlB,OAAX,EAAuC;AAAA,UAAnBmB,UAAmB,uEAAN,IAAM;AACnDC,mCAAuBF,QAAvBE,EAAiCpB,OAAjCoB,EAA0CD,UAA1CC;AACD;;AAEDf,cAAU,CAACJ,MAAD,EAAS;AACjBA,YAAM,GAAG,KAAKoB,eAAL,CAAqBpB,MAArB,EAA6B,KAAKE,QAAlC,CAATF;AACAA,YAAM,GAAG,KAAKqB,iBAAL,CAAuBrB,MAAvB,CAATA;;AACA,WAAKsB,gBAAL,CAAsBtB,MAAtB;;AACA,aAAOA,MAAP;AAjC+B;;;AAqCf,WAAXuB,WAAW,CAACxB,OAAD,EAAU;AAC1B,aAAOM,sBAAKmB,GAALnB,CAASJ,iBAAWF,OAAXE,CAATI,EAA8B,KAAKE,QAAnCF,CAAP;AACD;;AAEyB,WAAnBoB,mBAAmB,CAAC1B,OAAD,EAAuB;AAAA,UAAbC,MAAa,uEAAJ,EAAI;AAC/C,aAAO,KAAKuB,WAAL,CAAiBxB,OAAjB,KAA6B,IAAI,IAAJ,CAASA,OAAT,EAAkB,OAAOC,MAAP,KAAkB,QAAlB,GAA6BA,MAA7B,GAAsC,IAAxD,CAApC;AACD;;AAEiB,eAAPL,OAAO,GAAG;AACnB,aAAOA,OAAP;AACD;;AAEkB,eAARY,QAAQ,GAAG;AACpB,aAAQ,MAAK,KAAKmB,IAAlB;AACD;;AAEmB,eAATd,SAAS,GAAG;AACrB,aAAQ,IAAG,KAAKL,QAAhB;AACD;;AAEe,WAAToB,SAAS,CAACC,IAAD,EAAO;AACrB,aAAUA,OAAO,QAAKhB,SAAtB;AACD;;AA3DgC","names":["VERSION","BaseComponent","Config","constructor","element","config","getElement","_element","_config","_getConfig","Data","set","DATA_KEY","dispose","remove","EventHandler","off","EVENT_KEY","propertyName","Object","getOwnPropertyNames","_queueCallback","callback","isAnimated","executeAfterTransition","_mergeConfigObj","_configAfterMerge","_typeCheckConfig","getInstance","get","getOrCreateInstance","NAME","eventName","name"],"sources":["C:\\Users\\USER\\OneDrive\\Desktop\\WebCourse\\DormCritique\\frontend\\node_modules\\bootstrap\\js\\src\\base-component.js"],"sourcesContent":["/**\n * --------------------------------------------------------------------------\n * Bootstrap (v5.2.3): base-component.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nimport Data from './dom/data'\nimport { executeAfterTransition, getElement } from './util/index'\nimport EventHandler from './dom/event-handler'\nimport Config from './util/config'\n\n/**\n * Constants\n */\n\nconst VERSION = '5.2.3'\n\n/**\n * Class definition\n */\n\nclass BaseComponent extends Config {\n  constructor(element, config) {\n    super()\n\n    element = getElement(element)\n    if (!element) {\n      return\n    }\n\n    this._element = element\n    this._config = this._getConfig(config)\n\n    Data.set(this._element, this.constructor.DATA_KEY, this)\n  }\n\n  // Public\n  dispose() {\n    Data.remove(this._element, this.constructor.DATA_KEY)\n    EventHandler.off(this._element, this.constructor.EVENT_KEY)\n\n    for (const propertyName of Object.getOwnPropertyNames(this)) {\n      this[propertyName] = null\n    }\n  }\n\n  _queueCallback(callback, element, isAnimated = true) {\n    executeAfterTransition(callback, element, isAnimated)\n  }\n\n  _getConfig(config) {\n    config = this._mergeConfigObj(config, this._element)\n    config = this._configAfterMerge(config)\n    this._typeCheckConfig(config)\n    return config\n  }\n\n  // Static\n  static getInstance(element) {\n    return Data.get(getElement(element), this.DATA_KEY)\n  }\n\n  static getOrCreateInstance(element, config = {}) {\n    return this.getInstance(element) || new this(element, typeof config === 'object' ? config : null)\n  }\n\n  static get VERSION() {\n    return VERSION\n  }\n\n  static get DATA_KEY() {\n    return `bs.${this.NAME}`\n  }\n\n  static get EVENT_KEY() {\n    return `.${this.DATA_KEY}`\n  }\n\n  static eventName(name) {\n    return `${name}${this.EVENT_KEY}`\n  }\n}\n\nexport default BaseComponent\n"]},"metadata":{},"sourceType":"script"}