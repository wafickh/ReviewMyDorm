{"ast":null,"code":"/**\n * --------------------------------------------------------------------------\n * Bootstrap (v5.2.3): util/focustrap.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nimport EventHandler from '../dom/event-handler';\nimport SelectorEngine from '../dom/selector-engine';\nimport Config from './config';\n\n/**\n * Constants\n */\n\nconst NAME = 'focustrap';\nconst DATA_KEY = 'bs.focustrap';\nconst EVENT_KEY = `.${DATA_KEY}`;\nconst EVENT_FOCUSIN = `focusin${EVENT_KEY}`;\nconst EVENT_KEYDOWN_TAB = `keydown.tab${EVENT_KEY}`;\nconst TAB_KEY = 'Tab';\nconst TAB_NAV_FORWARD = 'forward';\nconst TAB_NAV_BACKWARD = 'backward';\nconst Default = {\n  autofocus: true,\n  trapElement: null // The element to trap focus inside of\n};\n\nconst DefaultType = {\n  autofocus: 'boolean',\n  trapElement: 'element'\n};\n\n/**\n * Class definition\n */\n\nclass FocusTrap extends Config {\n  constructor(config) {\n    super();\n    this._config = this._getConfig(config);\n    this._isActive = false;\n    this._lastTabNavDirection = null;\n  }\n\n  // Getters\n  static get Default() {\n    return Default;\n  }\n  static get DefaultType() {\n    return DefaultType;\n  }\n  static get NAME() {\n    return NAME;\n  }\n\n  // Public\n  activate() {\n    if (this._isActive) {\n      return;\n    }\n    if (this._config.autofocus) {\n      this._config.trapElement.focus();\n    }\n    EventHandler.off(document, EVENT_KEY); // guard against infinite focus loop\n    EventHandler.on(document, EVENT_FOCUSIN, event => this._handleFocusin(event));\n    EventHandler.on(document, EVENT_KEYDOWN_TAB, event => this._handleKeydown(event));\n    this._isActive = true;\n  }\n  deactivate() {\n    if (!this._isActive) {\n      return;\n    }\n    this._isActive = false;\n    EventHandler.off(document, EVENT_KEY);\n  }\n\n  // Private\n  _handleFocusin(event) {\n    const {\n      trapElement\n    } = this._config;\n    if (event.target === document || event.target === trapElement || trapElement.contains(event.target)) {\n      return;\n    }\n    const elements = SelectorEngine.focusableChildren(trapElement);\n    if (elements.length === 0) {\n      trapElement.focus();\n    } else if (this._lastTabNavDirection === TAB_NAV_BACKWARD) {\n      elements[elements.length - 1].focus();\n    } else {\n      elements[0].focus();\n    }\n  }\n  _handleKeydown(event) {\n    if (event.key !== TAB_KEY) {\n      return;\n    }\n    this._lastTabNavDirection = event.shiftKey ? TAB_NAV_BACKWARD : TAB_NAV_FORWARD;\n  }\n}\nexport default FocusTrap;","map":{"version":3,"names":["EventHandler","SelectorEngine","Config","NAME","DATA_KEY","EVENT_KEY","EVENT_FOCUSIN","EVENT_KEYDOWN_TAB","TAB_KEY","TAB_NAV_FORWARD","TAB_NAV_BACKWARD","Default","autofocus","trapElement","DefaultType","FocusTrap","constructor","config","_config","_getConfig","_isActive","_lastTabNavDirection","activate","focus","off","document","on","event","_handleFocusin","_handleKeydown","deactivate","target","contains","elements","focusableChildren","length","key","shiftKey"],"sources":["C:/Users/USER/OneDrive/Desktop/WebCourse/DormCritique/frontend/node_modules/bootstrap/js/src/util/focustrap.js"],"sourcesContent":["/**\n * --------------------------------------------------------------------------\n * Bootstrap (v5.2.3): util/focustrap.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nimport EventHandler from '../dom/event-handler'\nimport SelectorEngine from '../dom/selector-engine'\nimport Config from './config'\n\n/**\n * Constants\n */\n\nconst NAME = 'focustrap'\nconst DATA_KEY = 'bs.focustrap'\nconst EVENT_KEY = `.${DATA_KEY}`\nconst EVENT_FOCUSIN = `focusin${EVENT_KEY}`\nconst EVENT_KEYDOWN_TAB = `keydown.tab${EVENT_KEY}`\n\nconst TAB_KEY = 'Tab'\nconst TAB_NAV_FORWARD = 'forward'\nconst TAB_NAV_BACKWARD = 'backward'\n\nconst Default = {\n  autofocus: true,\n  trapElement: null // The element to trap focus inside of\n}\n\nconst DefaultType = {\n  autofocus: 'boolean',\n  trapElement: 'element'\n}\n\n/**\n * Class definition\n */\n\nclass FocusTrap extends Config {\n  constructor(config) {\n    super()\n    this._config = this._getConfig(config)\n    this._isActive = false\n    this._lastTabNavDirection = null\n  }\n\n  // Getters\n  static get Default() {\n    return Default\n  }\n\n  static get DefaultType() {\n    return DefaultType\n  }\n\n  static get NAME() {\n    return NAME\n  }\n\n  // Public\n  activate() {\n    if (this._isActive) {\n      return\n    }\n\n    if (this._config.autofocus) {\n      this._config.trapElement.focus()\n    }\n\n    EventHandler.off(document, EVENT_KEY) // guard against infinite focus loop\n    EventHandler.on(document, EVENT_FOCUSIN, event => this._handleFocusin(event))\n    EventHandler.on(document, EVENT_KEYDOWN_TAB, event => this._handleKeydown(event))\n\n    this._isActive = true\n  }\n\n  deactivate() {\n    if (!this._isActive) {\n      return\n    }\n\n    this._isActive = false\n    EventHandler.off(document, EVENT_KEY)\n  }\n\n  // Private\n  _handleFocusin(event) {\n    const { trapElement } = this._config\n\n    if (event.target === document || event.target === trapElement || trapElement.contains(event.target)) {\n      return\n    }\n\n    const elements = SelectorEngine.focusableChildren(trapElement)\n\n    if (elements.length === 0) {\n      trapElement.focus()\n    } else if (this._lastTabNavDirection === TAB_NAV_BACKWARD) {\n      elements[elements.length - 1].focus()\n    } else {\n      elements[0].focus()\n    }\n  }\n\n  _handleKeydown(event) {\n    if (event.key !== TAB_KEY) {\n      return\n    }\n\n    this._lastTabNavDirection = event.shiftKey ? TAB_NAV_BACKWARD : TAB_NAV_FORWARD\n  }\n}\n\nexport default FocusTrap\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAOA,YAAY,MAAM,sBAAsB;AAC/C,OAAOC,cAAc,MAAM,wBAAwB;AACnD,OAAOC,MAAM,MAAM,UAAU;;AAE7B;AACA;AACA;;AAEA,MAAMC,IAAI,GAAG,WAAW;AACxB,MAAMC,QAAQ,GAAG,cAAc;AAC/B,MAAMC,SAAS,GAAI,IAAGD,QAAS,EAAC;AAChC,MAAME,aAAa,GAAI,UAASD,SAAU,EAAC;AAC3C,MAAME,iBAAiB,GAAI,cAAaF,SAAU,EAAC;AAEnD,MAAMG,OAAO,GAAG,KAAK;AACrB,MAAMC,eAAe,GAAG,SAAS;AACjC,MAAMC,gBAAgB,GAAG,UAAU;AAEnC,MAAMC,OAAO,GAAG;EACdC,SAAS,EAAE,IAAI;EACfC,WAAW,EAAE,IAAI,CAAC;AACpB,CAAC;;AAED,MAAMC,WAAW,GAAG;EAClBF,SAAS,EAAE,SAAS;EACpBC,WAAW,EAAE;AACf,CAAC;;AAED;AACA;AACA;;AAEA,MAAME,SAAS,SAASb,MAAM,CAAC;EAC7Bc,WAAW,CAACC,MAAM,EAAE;IAClB,KAAK,EAAE;IACP,IAAI,CAACC,OAAO,GAAG,IAAI,CAACC,UAAU,CAACF,MAAM,CAAC;IACtC,IAAI,CAACG,SAAS,GAAG,KAAK;IACtB,IAAI,CAACC,oBAAoB,GAAG,IAAI;EAClC;;EAEA;EACA,WAAWV,OAAO,GAAG;IACnB,OAAOA,OAAO;EAChB;EAEA,WAAWG,WAAW,GAAG;IACvB,OAAOA,WAAW;EACpB;EAEA,WAAWX,IAAI,GAAG;IAChB,OAAOA,IAAI;EACb;;EAEA;EACAmB,QAAQ,GAAG;IACT,IAAI,IAAI,CAACF,SAAS,EAAE;MAClB;IACF;IAEA,IAAI,IAAI,CAACF,OAAO,CAACN,SAAS,EAAE;MAC1B,IAAI,CAACM,OAAO,CAACL,WAAW,CAACU,KAAK,EAAE;IAClC;IAEAvB,YAAY,CAACwB,GAAG,CAACC,QAAQ,EAAEpB,SAAS,CAAC,EAAC;IACtCL,YAAY,CAAC0B,EAAE,CAACD,QAAQ,EAAEnB,aAAa,EAAEqB,KAAK,IAAI,IAAI,CAACC,cAAc,CAACD,KAAK,CAAC,CAAC;IAC7E3B,YAAY,CAAC0B,EAAE,CAACD,QAAQ,EAAElB,iBAAiB,EAAEoB,KAAK,IAAI,IAAI,CAACE,cAAc,CAACF,KAAK,CAAC,CAAC;IAEjF,IAAI,CAACP,SAAS,GAAG,IAAI;EACvB;EAEAU,UAAU,GAAG;IACX,IAAI,CAAC,IAAI,CAACV,SAAS,EAAE;MACnB;IACF;IAEA,IAAI,CAACA,SAAS,GAAG,KAAK;IACtBpB,YAAY,CAACwB,GAAG,CAACC,QAAQ,EAAEpB,SAAS,CAAC;EACvC;;EAEA;EACAuB,cAAc,CAACD,KAAK,EAAE;IACpB,MAAM;MAAEd;IAAY,CAAC,GAAG,IAAI,CAACK,OAAO;IAEpC,IAAIS,KAAK,CAACI,MAAM,KAAKN,QAAQ,IAAIE,KAAK,CAACI,MAAM,KAAKlB,WAAW,IAAIA,WAAW,CAACmB,QAAQ,CAACL,KAAK,CAACI,MAAM,CAAC,EAAE;MACnG;IACF;IAEA,MAAME,QAAQ,GAAGhC,cAAc,CAACiC,iBAAiB,CAACrB,WAAW,CAAC;IAE9D,IAAIoB,QAAQ,CAACE,MAAM,KAAK,CAAC,EAAE;MACzBtB,WAAW,CAACU,KAAK,EAAE;IACrB,CAAC,MAAM,IAAI,IAAI,CAACF,oBAAoB,KAAKX,gBAAgB,EAAE;MACzDuB,QAAQ,CAACA,QAAQ,CAACE,MAAM,GAAG,CAAC,CAAC,CAACZ,KAAK,EAAE;IACvC,CAAC,MAAM;MACLU,QAAQ,CAAC,CAAC,CAAC,CAACV,KAAK,EAAE;IACrB;EACF;EAEAM,cAAc,CAACF,KAAK,EAAE;IACpB,IAAIA,KAAK,CAACS,GAAG,KAAK5B,OAAO,EAAE;MACzB;IACF;IAEA,IAAI,CAACa,oBAAoB,GAAGM,KAAK,CAACU,QAAQ,GAAG3B,gBAAgB,GAAGD,eAAe;EACjF;AACF;AAEA,eAAeM,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}