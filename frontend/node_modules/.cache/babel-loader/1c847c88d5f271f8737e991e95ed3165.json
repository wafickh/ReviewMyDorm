{"ast":null,"code":"/*!\n  * Bootstrap dropdown.js v5.2.3 (https://getbootstrap.com/)\n  * Copyright 2011-2022 The Bootstrap Authors (https://github.com/twbs/bootstrap/graphs/contributors)\n  * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n  */\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('@popperjs/core'), require('./util/index'), require('./dom/event-handler'), require('./dom/manipulator'), require('./dom/selector-engine'), require('./base-component')) : typeof define === 'function' && define.amd ? define(['@popperjs/core', './util/index', './dom/event-handler', './dom/manipulator', './dom/selector-engine', './base-component'], factory) : (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.Dropdown = factory(global[\"@popperjs/core\"], global.Index, global.EventHandler, global.Manipulator, global.SelectorEngine, global.BaseComponent));\n})(this, function (Popper, index, EventHandler, Manipulator, SelectorEngine, BaseComponent) {\n  'use strict';\n\n  const _interopDefaultLegacy = e => e && typeof e === 'object' && 'default' in e ? e : {\n    default: e\n  };\n\n  function _interopNamespace(e) {\n    if (e && e.__esModule) return e;\n    const n = Object.create(null, {\n      [Symbol.toStringTag]: {\n        value: 'Module'\n      }\n    });\n\n    if (e) {\n      for (const k in e) {\n        if (k !== 'default') {\n          const d = Object.getOwnPropertyDescriptor(e, k);\n          Object.defineProperty(n, k, d.get ? d : {\n            enumerable: true,\n            get: () => e[k]\n          });\n        }\n      }\n    }\n\n    n.default = e;\n    return Object.freeze(n);\n  }\n\n  const Popper__namespace = /*#__PURE__*/_interopNamespace(Popper);\n\n  const EventHandler__default = /*#__PURE__*/_interopDefaultLegacy(EventHandler);\n\n  const Manipulator__default = /*#__PURE__*/_interopDefaultLegacy(Manipulator);\n\n  const SelectorEngine__default = /*#__PURE__*/_interopDefaultLegacy(SelectorEngine);\n\n  const BaseComponent__default = /*#__PURE__*/_interopDefaultLegacy(BaseComponent);\n  /**\n   * --------------------------------------------------------------------------\n   * Bootstrap (v5.2.3): dropdown.js\n   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n   * --------------------------------------------------------------------------\n   */\n\n  /**\n   * Constants\n   */\n\n\n  const NAME = 'dropdown';\n  const DATA_KEY = 'bs.dropdown';\n  const EVENT_KEY = `.${DATA_KEY}`;\n  const DATA_API_KEY = '.data-api';\n  const ESCAPE_KEY = 'Escape';\n  const TAB_KEY = 'Tab';\n  const ARROW_UP_KEY = 'ArrowUp';\n  const ARROW_DOWN_KEY = 'ArrowDown';\n  const RIGHT_MOUSE_BUTTON = 2; // MouseEvent.button value for the secondary button, usually the right button\n\n  const EVENT_HIDE = `hide${EVENT_KEY}`;\n  const EVENT_HIDDEN = `hidden${EVENT_KEY}`;\n  const EVENT_SHOW = `show${EVENT_KEY}`;\n  const EVENT_SHOWN = `shown${EVENT_KEY}`;\n  const EVENT_CLICK_DATA_API = `click${EVENT_KEY}${DATA_API_KEY}`;\n  const EVENT_KEYDOWN_DATA_API = `keydown${EVENT_KEY}${DATA_API_KEY}`;\n  const EVENT_KEYUP_DATA_API = `keyup${EVENT_KEY}${DATA_API_KEY}`;\n  const CLASS_NAME_SHOW = 'show';\n  const CLASS_NAME_DROPUP = 'dropup';\n  const CLASS_NAME_DROPEND = 'dropend';\n  const CLASS_NAME_DROPSTART = 'dropstart';\n  const CLASS_NAME_DROPUP_CENTER = 'dropup-center';\n  const CLASS_NAME_DROPDOWN_CENTER = 'dropdown-center';\n  const SELECTOR_DATA_TOGGLE = '[data-bs-toggle=\"dropdown\"]:not(.disabled):not(:disabled)';\n  const SELECTOR_DATA_TOGGLE_SHOWN = `${SELECTOR_DATA_TOGGLE}.${CLASS_NAME_SHOW}`;\n  const SELECTOR_MENU = '.dropdown-menu';\n  const SELECTOR_NAVBAR = '.navbar';\n  const SELECTOR_NAVBAR_NAV = '.navbar-nav';\n  const SELECTOR_VISIBLE_ITEMS = '.dropdown-menu .dropdown-item:not(.disabled):not(:disabled)';\n  const PLACEMENT_TOP = index.isRTL() ? 'top-end' : 'top-start';\n  const PLACEMENT_TOPEND = index.isRTL() ? 'top-start' : 'top-end';\n  const PLACEMENT_BOTTOM = index.isRTL() ? 'bottom-end' : 'bottom-start';\n  const PLACEMENT_BOTTOMEND = index.isRTL() ? 'bottom-start' : 'bottom-end';\n  const PLACEMENT_RIGHT = index.isRTL() ? 'left-start' : 'right-start';\n  const PLACEMENT_LEFT = index.isRTL() ? 'right-start' : 'left-start';\n  const PLACEMENT_TOPCENTER = 'top';\n  const PLACEMENT_BOTTOMCENTER = 'bottom';\n  const Default = {\n    autoClose: true,\n    boundary: 'clippingParents',\n    display: 'dynamic',\n    offset: [0, 2],\n    popperConfig: null,\n    reference: 'toggle'\n  };\n  const DefaultType = {\n    autoClose: '(boolean|string)',\n    boundary: '(string|element)',\n    display: 'string',\n    offset: '(array|string|function)',\n    popperConfig: '(null|object|function)',\n    reference: '(string|element|object)'\n  };\n  /**\n   * Class definition\n   */\n\n  class Dropdown extends BaseComponent__default.default {\n    constructor(element, config) {\n      super(element, config);\n      this._popper = null;\n      this._parent = this._element.parentNode; // dropdown wrapper\n      // todo: v6 revert #37011 & change markup https://getbootstrap.com/docs/5.2/forms/input-group/\n\n      this._menu = SelectorEngine__default.default.next(this._element, SELECTOR_MENU)[0] || SelectorEngine__default.default.prev(this._element, SELECTOR_MENU)[0] || SelectorEngine__default.default.findOne(SELECTOR_MENU, this._parent);\n      this._inNavbar = this._detectNavbar();\n    } // Getters\n\n\n    static get Default() {\n      return Default;\n    }\n\n    static get DefaultType() {\n      return DefaultType;\n    }\n\n    static get NAME() {\n      return NAME;\n    } // Public\n\n\n    toggle() {\n      return this._isShown() ? this.hide() : this.show();\n    }\n\n    show() {\n      if (index.isDisabled(this._element) || this._isShown()) {\n        return;\n      }\n\n      const relatedTarget = {\n        relatedTarget: this._element\n      };\n      const showEvent = EventHandler__default.default.trigger(this._element, EVENT_SHOW, relatedTarget);\n\n      if (showEvent.defaultPrevented) {\n        return;\n      }\n\n      this._createPopper(); // If this is a touch-enabled device we add extra\n      // empty mouseover listeners to the body's immediate children;\n      // only needed because of broken event delegation on iOS\n      // https://www.quirksmode.org/blog/archives/2014/02/mouse_event_bub.html\n\n\n      if ('ontouchstart' in document.documentElement && !this._parent.closest(SELECTOR_NAVBAR_NAV)) {\n        for (const element of [].concat(...document.body.children)) {\n          EventHandler__default.default.on(element, 'mouseover', index.noop);\n        }\n      }\n\n      this._element.focus();\n\n      this._element.setAttribute('aria-expanded', true);\n\n      this._menu.classList.add(CLASS_NAME_SHOW);\n\n      this._element.classList.add(CLASS_NAME_SHOW);\n\n      EventHandler__default.default.trigger(this._element, EVENT_SHOWN, relatedTarget);\n    }\n\n    hide() {\n      if (index.isDisabled(this._element) || !this._isShown()) {\n        return;\n      }\n\n      const relatedTarget = {\n        relatedTarget: this._element\n      };\n\n      this._completeHide(relatedTarget);\n    }\n\n    dispose() {\n      if (this._popper) {\n        this._popper.destroy();\n      }\n\n      super.dispose();\n    }\n\n    update() {\n      this._inNavbar = this._detectNavbar();\n\n      if (this._popper) {\n        this._popper.update();\n      }\n    } // Private\n\n\n    _completeHide(relatedTarget) {\n      const hideEvent = EventHandler__default.default.trigger(this._element, EVENT_HIDE, relatedTarget);\n\n      if (hideEvent.defaultPrevented) {\n        return;\n      } // If this is a touch-enabled device we remove the extra\n      // empty mouseover listeners we added for iOS support\n\n\n      if ('ontouchstart' in document.documentElement) {\n        for (const element of [].concat(...document.body.children)) {\n          EventHandler__default.default.off(element, 'mouseover', index.noop);\n        }\n      }\n\n      if (this._popper) {\n        this._popper.destroy();\n      }\n\n      this._menu.classList.remove(CLASS_NAME_SHOW);\n\n      this._element.classList.remove(CLASS_NAME_SHOW);\n\n      this._element.setAttribute('aria-expanded', 'false');\n\n      Manipulator__default.default.removeDataAttribute(this._menu, 'popper');\n      EventHandler__default.default.trigger(this._element, EVENT_HIDDEN, relatedTarget);\n    }\n\n    _getConfig(config) {\n      config = super._getConfig(config);\n\n      if (typeof config.reference === 'object' && !index.isElement(config.reference) && typeof config.reference.getBoundingClientRect !== 'function') {\n        // Popper virtual elements require a getBoundingClientRect method\n        throw new TypeError(`${NAME.toUpperCase()}: Option \"reference\" provided type \"object\" without a required \"getBoundingClientRect\" method.`);\n      }\n\n      return config;\n    }\n\n    _createPopper() {\n      if (typeof Popper__namespace === 'undefined') {\n        throw new TypeError('Bootstrap\\'s dropdowns require Popper (https://popper.js.org)');\n      }\n\n      let referenceElement = this._element;\n\n      if (this._config.reference === 'parent') {\n        referenceElement = this._parent;\n      } else if (index.isElement(this._config.reference)) {\n        referenceElement = index.getElement(this._config.reference);\n      } else if (typeof this._config.reference === 'object') {\n        referenceElement = this._config.reference;\n      }\n\n      const popperConfig = this._getPopperConfig();\n\n      this._popper = Popper__namespace.createPopper(referenceElement, this._menu, popperConfig);\n    }\n\n    _isShown() {\n      return this._menu.classList.contains(CLASS_NAME_SHOW);\n    }\n\n    _getPlacement() {\n      const parentDropdown = this._parent;\n\n      if (parentDropdown.classList.contains(CLASS_NAME_DROPEND)) {\n        return PLACEMENT_RIGHT;\n      }\n\n      if (parentDropdown.classList.contains(CLASS_NAME_DROPSTART)) {\n        return PLACEMENT_LEFT;\n      }\n\n      if (parentDropdown.classList.contains(CLASS_NAME_DROPUP_CENTER)) {\n        return PLACEMENT_TOPCENTER;\n      }\n\n      if (parentDropdown.classList.contains(CLASS_NAME_DROPDOWN_CENTER)) {\n        return PLACEMENT_BOTTOMCENTER;\n      } // We need to trim the value because custom properties can also include spaces\n\n\n      const isEnd = getComputedStyle(this._menu).getPropertyValue('--bs-position').trim() === 'end';\n\n      if (parentDropdown.classList.contains(CLASS_NAME_DROPUP)) {\n        return isEnd ? PLACEMENT_TOPEND : PLACEMENT_TOP;\n      }\n\n      return isEnd ? PLACEMENT_BOTTOMEND : PLACEMENT_BOTTOM;\n    }\n\n    _detectNavbar() {\n      return this._element.closest(SELECTOR_NAVBAR) !== null;\n    }\n\n    _getOffset() {\n      const {\n        offset\n      } = this._config;\n\n      if (typeof offset === 'string') {\n        return offset.split(',').map(value => Number.parseInt(value, 10));\n      }\n\n      if (typeof offset === 'function') {\n        return popperData => offset(popperData, this._element);\n      }\n\n      return offset;\n    }\n\n    _getPopperConfig() {\n      const defaultBsPopperConfig = {\n        placement: this._getPlacement(),\n        modifiers: [{\n          name: 'preventOverflow',\n          options: {\n            boundary: this._config.boundary\n          }\n        }, {\n          name: 'offset',\n          options: {\n            offset: this._getOffset()\n          }\n        }]\n      }; // Disable Popper if we have a static display or Dropdown is in Navbar\n\n      if (this._inNavbar || this._config.display === 'static') {\n        Manipulator__default.default.setDataAttribute(this._menu, 'popper', 'static'); // todo:v6 remove\n\n        defaultBsPopperConfig.modifiers = [{\n          name: 'applyStyles',\n          enabled: false\n        }];\n      }\n\n      return { ...defaultBsPopperConfig,\n        ...(typeof this._config.popperConfig === 'function' ? this._config.popperConfig(defaultBsPopperConfig) : this._config.popperConfig)\n      };\n    }\n\n    _selectMenuItem({\n      key,\n      target\n    }) {\n      const items = SelectorEngine__default.default.find(SELECTOR_VISIBLE_ITEMS, this._menu).filter(element => index.isVisible(element));\n\n      if (!items.length) {\n        return;\n      } // if target isn't included in items (e.g. when expanding the dropdown)\n      // allow cycling to get the last item in case key equals ARROW_UP_KEY\n\n\n      index.getNextActiveElement(items, target, key === ARROW_DOWN_KEY, !items.includes(target)).focus();\n    } // Static\n\n\n    static jQueryInterface(config) {\n      return this.each(function () {\n        const data = Dropdown.getOrCreateInstance(this, config);\n\n        if (typeof config !== 'string') {\n          return;\n        }\n\n        if (typeof data[config] === 'undefined') {\n          throw new TypeError(`No method named \"${config}\"`);\n        }\n\n        data[config]();\n      });\n    }\n\n    static clearMenus(event) {\n      if (event.button === RIGHT_MOUSE_BUTTON || event.type === 'keyup' && event.key !== TAB_KEY) {\n        return;\n      }\n\n      const openToggles = SelectorEngine__default.default.find(SELECTOR_DATA_TOGGLE_SHOWN);\n\n      for (const toggle of openToggles) {\n        const context = Dropdown.getInstance(toggle);\n\n        if (!context || context._config.autoClose === false) {\n          continue;\n        }\n\n        const composedPath = event.composedPath();\n        const isMenuTarget = composedPath.includes(context._menu);\n\n        if (composedPath.includes(context._element) || context._config.autoClose === 'inside' && !isMenuTarget || context._config.autoClose === 'outside' && isMenuTarget) {\n          continue;\n        } // Tab navigation through the dropdown menu or events from contained inputs shouldn't close the menu\n\n\n        if (context._menu.contains(event.target) && (event.type === 'keyup' && event.key === TAB_KEY || /input|select|option|textarea|form/i.test(event.target.tagName))) {\n          continue;\n        }\n\n        const relatedTarget = {\n          relatedTarget: context._element\n        };\n\n        if (event.type === 'click') {\n          relatedTarget.clickEvent = event;\n        }\n\n        context._completeHide(relatedTarget);\n      }\n    }\n\n    static dataApiKeydownHandler(event) {\n      // If not an UP | DOWN | ESCAPE key => not a dropdown command\n      // If input/textarea && if key is other than ESCAPE => not a dropdown command\n      const isInput = /input|textarea/i.test(event.target.tagName);\n      const isEscapeEvent = event.key === ESCAPE_KEY;\n      const isUpOrDownEvent = [ARROW_UP_KEY, ARROW_DOWN_KEY].includes(event.key);\n\n      if (!isUpOrDownEvent && !isEscapeEvent) {\n        return;\n      }\n\n      if (isInput && !isEscapeEvent) {\n        return;\n      }\n\n      event.preventDefault(); // todo: v6 revert #37011 & change markup https://getbootstrap.com/docs/5.2/forms/input-group/\n\n      const getToggleButton = this.matches(SELECTOR_DATA_TOGGLE) ? this : SelectorEngine__default.default.prev(this, SELECTOR_DATA_TOGGLE)[0] || SelectorEngine__default.default.next(this, SELECTOR_DATA_TOGGLE)[0] || SelectorEngine__default.default.findOne(SELECTOR_DATA_TOGGLE, event.delegateTarget.parentNode);\n      const instance = Dropdown.getOrCreateInstance(getToggleButton);\n\n      if (isUpOrDownEvent) {\n        event.stopPropagation();\n        instance.show();\n\n        instance._selectMenuItem(event);\n\n        return;\n      }\n\n      if (instance._isShown()) {\n        // else is escape and we check if it is shown\n        event.stopPropagation();\n        instance.hide();\n        getToggleButton.focus();\n      }\n    }\n\n  }\n  /**\n   * Data API implementation\n   */\n\n\n  EventHandler__default.default.on(document, EVENT_KEYDOWN_DATA_API, SELECTOR_DATA_TOGGLE, Dropdown.dataApiKeydownHandler);\n  EventHandler__default.default.on(document, EVENT_KEYDOWN_DATA_API, SELECTOR_MENU, Dropdown.dataApiKeydownHandler);\n  EventHandler__default.default.on(document, EVENT_CLICK_DATA_API, Dropdown.clearMenus);\n  EventHandler__default.default.on(document, EVENT_KEYUP_DATA_API, Dropdown.clearMenus);\n  EventHandler__default.default.on(document, EVENT_CLICK_DATA_API, SELECTOR_DATA_TOGGLE, function (event) {\n    event.preventDefault();\n    Dropdown.getOrCreateInstance(this).toggle();\n  });\n  /**\n   * jQuery\n   */\n\n  index.defineJQueryPlugin(Dropdown);\n  return Dropdown;\n});","map":{"version":3,"sources":["../src/dropdown.js"],"names":["NAME","DATA_KEY","EVENT_KEY","DATA_API_KEY","ESCAPE_KEY","TAB_KEY","ARROW_UP_KEY","ARROW_DOWN_KEY","RIGHT_MOUSE_BUTTON","EVENT_HIDE","EVENT_HIDDEN","EVENT_SHOW","EVENT_SHOWN","EVENT_CLICK_DATA_API","EVENT_KEYDOWN_DATA_API","EVENT_KEYUP_DATA_API","CLASS_NAME_SHOW","CLASS_NAME_DROPUP","CLASS_NAME_DROPEND","CLASS_NAME_DROPSTART","CLASS_NAME_DROPUP_CENTER","CLASS_NAME_DROPDOWN_CENTER","SELECTOR_DATA_TOGGLE","SELECTOR_DATA_TOGGLE_SHOWN","SELECTOR_MENU","SELECTOR_NAVBAR","SELECTOR_NAVBAR_NAV","SELECTOR_VISIBLE_ITEMS","PLACEMENT_TOP","isRTL","PLACEMENT_TOPEND","PLACEMENT_BOTTOM","PLACEMENT_BOTTOMEND","PLACEMENT_RIGHT","PLACEMENT_LEFT","PLACEMENT_TOPCENTER","PLACEMENT_BOTTOMCENTER","Default","autoClose","boundary","display","offset","popperConfig","reference","DefaultType","BaseComponent","constructor","SelectorEngine","toggle","show","isDisabled","relatedTarget","_element","showEvent","EventHandler","document","noop","hide","dispose","update","_completeHide","hideEvent","Manipulator","_getConfig","config","isElement","_createPopper","referenceElement","getElement","Popper","_isShown","_getPlacement","parentDropdown","isEnd","getComputedStyle","_detectNavbar","_getOffset","value","Number","popperData","_getPopperConfig","defaultBsPopperConfig","placement","modifiers","name","options","enabled","_selectMenuItem","target","items","element","isVisible","getNextActiveElement","key","jQueryInterface","data","Dropdown","clearMenus","event","openToggles","context","composedPath","isMenuTarget","dataApiKeydownHandler","isInput","isEscapeEvent","isUpOrDownEvent","getToggleButton","instance","defineJQueryPlugin"],"mappings":"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","sourcesContent":["/**\n * --------------------------------------------------------------------------\n * Bootstrap (v5.2.3): dropdown.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nimport * as Popper from '@popperjs/core'\nimport {\n  defineJQueryPlugin,\n  getElement,\n  getNextActiveElement,\n  isDisabled,\n  isElement,\n  isRTL,\n  isVisible,\n  noop\n} from './util/index'\nimport EventHandler from './dom/event-handler'\nimport Manipulator from './dom/manipulator'\nimport SelectorEngine from './dom/selector-engine'\nimport BaseComponent from './base-component'\n\n/**\n * Constants\n */\n\nconst NAME = 'dropdown'\nconst DATA_KEY = 'bs.dropdown'\nconst EVENT_KEY = `.${DATA_KEY}`\nconst DATA_API_KEY = '.data-api'\n\nconst ESCAPE_KEY = 'Escape'\nconst TAB_KEY = 'Tab'\nconst ARROW_UP_KEY = 'ArrowUp'\nconst ARROW_DOWN_KEY = 'ArrowDown'\nconst RIGHT_MOUSE_BUTTON = 2 // MouseEvent.button value for the secondary button, usually the right button\n\nconst EVENT_HIDE = `hide${EVENT_KEY}`\nconst EVENT_HIDDEN = `hidden${EVENT_KEY}`\nconst EVENT_SHOW = `show${EVENT_KEY}`\nconst EVENT_SHOWN = `shown${EVENT_KEY}`\nconst EVENT_CLICK_DATA_API = `click${EVENT_KEY}${DATA_API_KEY}`\nconst EVENT_KEYDOWN_DATA_API = `keydown${EVENT_KEY}${DATA_API_KEY}`\nconst EVENT_KEYUP_DATA_API = `keyup${EVENT_KEY}${DATA_API_KEY}`\n\nconst CLASS_NAME_SHOW = 'show'\nconst CLASS_NAME_DROPUP = 'dropup'\nconst CLASS_NAME_DROPEND = 'dropend'\nconst CLASS_NAME_DROPSTART = 'dropstart'\nconst CLASS_NAME_DROPUP_CENTER = 'dropup-center'\nconst CLASS_NAME_DROPDOWN_CENTER = 'dropdown-center'\n\nconst SELECTOR_DATA_TOGGLE = '[data-bs-toggle=\"dropdown\"]:not(.disabled):not(:disabled)'\nconst SELECTOR_DATA_TOGGLE_SHOWN = `${SELECTOR_DATA_TOGGLE}.${CLASS_NAME_SHOW}`\nconst SELECTOR_MENU = '.dropdown-menu'\nconst SELECTOR_NAVBAR = '.navbar'\nconst SELECTOR_NAVBAR_NAV = '.navbar-nav'\nconst SELECTOR_VISIBLE_ITEMS = '.dropdown-menu .dropdown-item:not(.disabled):not(:disabled)'\n\nconst PLACEMENT_TOP = isRTL() ? 'top-end' : 'top-start'\nconst PLACEMENT_TOPEND = isRTL() ? 'top-start' : 'top-end'\nconst PLACEMENT_BOTTOM = isRTL() ? 'bottom-end' : 'bottom-start'\nconst PLACEMENT_BOTTOMEND = isRTL() ? 'bottom-start' : 'bottom-end'\nconst PLACEMENT_RIGHT = isRTL() ? 'left-start' : 'right-start'\nconst PLACEMENT_LEFT = isRTL() ? 'right-start' : 'left-start'\nconst PLACEMENT_TOPCENTER = 'top'\nconst PLACEMENT_BOTTOMCENTER = 'bottom'\n\nconst Default = {\n  autoClose: true,\n  boundary: 'clippingParents',\n  display: 'dynamic',\n  offset: [0, 2],\n  popperConfig: null,\n  reference: 'toggle'\n}\n\nconst DefaultType = {\n  autoClose: '(boolean|string)',\n  boundary: '(string|element)',\n  display: 'string',\n  offset: '(array|string|function)',\n  popperConfig: '(null|object|function)',\n  reference: '(string|element|object)'\n}\n\n/**\n * Class definition\n */\n\nclass Dropdown extends BaseComponent {\n  constructor(element, config) {\n    super(element, config)\n\n    this._popper = null\n    this._parent = this._element.parentNode // dropdown wrapper\n    // todo: v6 revert #37011 & change markup https://getbootstrap.com/docs/5.2/forms/input-group/\n    this._menu = SelectorEngine.next(this._element, SELECTOR_MENU)[0] ||\n      SelectorEngine.prev(this._element, SELECTOR_MENU)[0] ||\n      SelectorEngine.findOne(SELECTOR_MENU, this._parent)\n    this._inNavbar = this._detectNavbar()\n  }\n\n  // Getters\n  static get Default() {\n    return Default\n  }\n\n  static get DefaultType() {\n    return DefaultType\n  }\n\n  static get NAME() {\n    return NAME\n  }\n\n  // Public\n  toggle() {\n    return this._isShown() ? this.hide() : this.show()\n  }\n\n  show() {\n    if (isDisabled(this._element) || this._isShown()) {\n      return\n    }\n\n    const relatedTarget = {\n      relatedTarget: this._element\n    }\n\n    const showEvent = EventHandler.trigger(this._element, EVENT_SHOW, relatedTarget)\n\n    if (showEvent.defaultPrevented) {\n      return\n    }\n\n    this._createPopper()\n\n    // If this is a touch-enabled device we add extra\n    // empty mouseover listeners to the body's immediate children;\n    // only needed because of broken event delegation on iOS\n    // https://www.quirksmode.org/blog/archives/2014/02/mouse_event_bub.html\n    if ('ontouchstart' in document.documentElement && !this._parent.closest(SELECTOR_NAVBAR_NAV)) {\n      for (const element of [].concat(...document.body.children)) {\n        EventHandler.on(element, 'mouseover', noop)\n      }\n    }\n\n    this._element.focus()\n    this._element.setAttribute('aria-expanded', true)\n\n    this._menu.classList.add(CLASS_NAME_SHOW)\n    this._element.classList.add(CLASS_NAME_SHOW)\n    EventHandler.trigger(this._element, EVENT_SHOWN, relatedTarget)\n  }\n\n  hide() {\n    if (isDisabled(this._element) || !this._isShown()) {\n      return\n    }\n\n    const relatedTarget = {\n      relatedTarget: this._element\n    }\n\n    this._completeHide(relatedTarget)\n  }\n\n  dispose() {\n    if (this._popper) {\n      this._popper.destroy()\n    }\n\n    super.dispose()\n  }\n\n  update() {\n    this._inNavbar = this._detectNavbar()\n    if (this._popper) {\n      this._popper.update()\n    }\n  }\n\n  // Private\n  _completeHide(relatedTarget) {\n    const hideEvent = EventHandler.trigger(this._element, EVENT_HIDE, relatedTarget)\n    if (hideEvent.defaultPrevented) {\n      return\n    }\n\n    // If this is a touch-enabled device we remove the extra\n    // empty mouseover listeners we added for iOS support\n    if ('ontouchstart' in document.documentElement) {\n      for (const element of [].concat(...document.body.children)) {\n        EventHandler.off(element, 'mouseover', noop)\n      }\n    }\n\n    if (this._popper) {\n      this._popper.destroy()\n    }\n\n    this._menu.classList.remove(CLASS_NAME_SHOW)\n    this._element.classList.remove(CLASS_NAME_SHOW)\n    this._element.setAttribute('aria-expanded', 'false')\n    Manipulator.removeDataAttribute(this._menu, 'popper')\n    EventHandler.trigger(this._element, EVENT_HIDDEN, relatedTarget)\n  }\n\n  _getConfig(config) {\n    config = super._getConfig(config)\n\n    if (typeof config.reference === 'object' && !isElement(config.reference) &&\n      typeof config.reference.getBoundingClientRect !== 'function'\n    ) {\n      // Popper virtual elements require a getBoundingClientRect method\n      throw new TypeError(`${NAME.toUpperCase()}: Option \"reference\" provided type \"object\" without a required \"getBoundingClientRect\" method.`)\n    }\n\n    return config\n  }\n\n  _createPopper() {\n    if (typeof Popper === 'undefined') {\n      throw new TypeError('Bootstrap\\'s dropdowns require Popper (https://popper.js.org)')\n    }\n\n    let referenceElement = this._element\n\n    if (this._config.reference === 'parent') {\n      referenceElement = this._parent\n    } else if (isElement(this._config.reference)) {\n      referenceElement = getElement(this._config.reference)\n    } else if (typeof this._config.reference === 'object') {\n      referenceElement = this._config.reference\n    }\n\n    const popperConfig = this._getPopperConfig()\n    this._popper = Popper.createPopper(referenceElement, this._menu, popperConfig)\n  }\n\n  _isShown() {\n    return this._menu.classList.contains(CLASS_NAME_SHOW)\n  }\n\n  _getPlacement() {\n    const parentDropdown = this._parent\n\n    if (parentDropdown.classList.contains(CLASS_NAME_DROPEND)) {\n      return PLACEMENT_RIGHT\n    }\n\n    if (parentDropdown.classList.contains(CLASS_NAME_DROPSTART)) {\n      return PLACEMENT_LEFT\n    }\n\n    if (parentDropdown.classList.contains(CLASS_NAME_DROPUP_CENTER)) {\n      return PLACEMENT_TOPCENTER\n    }\n\n    if (parentDropdown.classList.contains(CLASS_NAME_DROPDOWN_CENTER)) {\n      return PLACEMENT_BOTTOMCENTER\n    }\n\n    // We need to trim the value because custom properties can also include spaces\n    const isEnd = getComputedStyle(this._menu).getPropertyValue('--bs-position').trim() === 'end'\n\n    if (parentDropdown.classList.contains(CLASS_NAME_DROPUP)) {\n      return isEnd ? PLACEMENT_TOPEND : PLACEMENT_TOP\n    }\n\n    return isEnd ? PLACEMENT_BOTTOMEND : PLACEMENT_BOTTOM\n  }\n\n  _detectNavbar() {\n    return this._element.closest(SELECTOR_NAVBAR) !== null\n  }\n\n  _getOffset() {\n    const { offset } = this._config\n\n    if (typeof offset === 'string') {\n      return offset.split(',').map(value => Number.parseInt(value, 10))\n    }\n\n    if (typeof offset === 'function') {\n      return popperData => offset(popperData, this._element)\n    }\n\n    return offset\n  }\n\n  _getPopperConfig() {\n    const defaultBsPopperConfig = {\n      placement: this._getPlacement(),\n      modifiers: [{\n        name: 'preventOverflow',\n        options: {\n          boundary: this._config.boundary\n        }\n      },\n      {\n        name: 'offset',\n        options: {\n          offset: this._getOffset()\n        }\n      }]\n    }\n\n    // Disable Popper if we have a static display or Dropdown is in Navbar\n    if (this._inNavbar || this._config.display === 'static') {\n      Manipulator.setDataAttribute(this._menu, 'popper', 'static') // todo:v6 remove\n      defaultBsPopperConfig.modifiers = [{\n        name: 'applyStyles',\n        enabled: false\n      }]\n    }\n\n    return {\n      ...defaultBsPopperConfig,\n      ...(typeof this._config.popperConfig === 'function' ? this._config.popperConfig(defaultBsPopperConfig) : this._config.popperConfig)\n    }\n  }\n\n  _selectMenuItem({ key, target }) {\n    const items = SelectorEngine.find(SELECTOR_VISIBLE_ITEMS, this._menu).filter(element => isVisible(element))\n\n    if (!items.length) {\n      return\n    }\n\n    // if target isn't included in items (e.g. when expanding the dropdown)\n    // allow cycling to get the last item in case key equals ARROW_UP_KEY\n    getNextActiveElement(items, target, key === ARROW_DOWN_KEY, !items.includes(target)).focus()\n  }\n\n  // Static\n  static jQueryInterface(config) {\n    return this.each(function () {\n      const data = Dropdown.getOrCreateInstance(this, config)\n\n      if (typeof config !== 'string') {\n        return\n      }\n\n      if (typeof data[config] === 'undefined') {\n        throw new TypeError(`No method named \"${config}\"`)\n      }\n\n      data[config]()\n    })\n  }\n\n  static clearMenus(event) {\n    if (event.button === RIGHT_MOUSE_BUTTON || (event.type === 'keyup' && event.key !== TAB_KEY)) {\n      return\n    }\n\n    const openToggles = SelectorEngine.find(SELECTOR_DATA_TOGGLE_SHOWN)\n\n    for (const toggle of openToggles) {\n      const context = Dropdown.getInstance(toggle)\n      if (!context || context._config.autoClose === false) {\n        continue\n      }\n\n      const composedPath = event.composedPath()\n      const isMenuTarget = composedPath.includes(context._menu)\n      if (\n        composedPath.includes(context._element) ||\n        (context._config.autoClose === 'inside' && !isMenuTarget) ||\n        (context._config.autoClose === 'outside' && isMenuTarget)\n      ) {\n        continue\n      }\n\n      // Tab navigation through the dropdown menu or events from contained inputs shouldn't close the menu\n      if (context._menu.contains(event.target) && ((event.type === 'keyup' && event.key === TAB_KEY) || /input|select|option|textarea|form/i.test(event.target.tagName))) {\n        continue\n      }\n\n      const relatedTarget = { relatedTarget: context._element }\n\n      if (event.type === 'click') {\n        relatedTarget.clickEvent = event\n      }\n\n      context._completeHide(relatedTarget)\n    }\n  }\n\n  static dataApiKeydownHandler(event) {\n    // If not an UP | DOWN | ESCAPE key => not a dropdown command\n    // If input/textarea && if key is other than ESCAPE => not a dropdown command\n\n    const isInput = /input|textarea/i.test(event.target.tagName)\n    const isEscapeEvent = event.key === ESCAPE_KEY\n    const isUpOrDownEvent = [ARROW_UP_KEY, ARROW_DOWN_KEY].includes(event.key)\n\n    if (!isUpOrDownEvent && !isEscapeEvent) {\n      return\n    }\n\n    if (isInput && !isEscapeEvent) {\n      return\n    }\n\n    event.preventDefault()\n\n    // todo: v6 revert #37011 & change markup https://getbootstrap.com/docs/5.2/forms/input-group/\n    const getToggleButton = this.matches(SELECTOR_DATA_TOGGLE) ?\n      this :\n      (SelectorEngine.prev(this, SELECTOR_DATA_TOGGLE)[0] ||\n        SelectorEngine.next(this, SELECTOR_DATA_TOGGLE)[0] ||\n        SelectorEngine.findOne(SELECTOR_DATA_TOGGLE, event.delegateTarget.parentNode))\n\n    const instance = Dropdown.getOrCreateInstance(getToggleButton)\n\n    if (isUpOrDownEvent) {\n      event.stopPropagation()\n      instance.show()\n      instance._selectMenuItem(event)\n      return\n    }\n\n    if (instance._isShown()) { // else is escape and we check if it is shown\n      event.stopPropagation()\n      instance.hide()\n      getToggleButton.focus()\n    }\n  }\n}\n\n/**\n * Data API implementation\n */\n\nEventHandler.on(document, EVENT_KEYDOWN_DATA_API, SELECTOR_DATA_TOGGLE, Dropdown.dataApiKeydownHandler)\nEventHandler.on(document, EVENT_KEYDOWN_DATA_API, SELECTOR_MENU, Dropdown.dataApiKeydownHandler)\nEventHandler.on(document, EVENT_CLICK_DATA_API, Dropdown.clearMenus)\nEventHandler.on(document, EVENT_KEYUP_DATA_API, Dropdown.clearMenus)\nEventHandler.on(document, EVENT_CLICK_DATA_API, SELECTOR_DATA_TOGGLE, function (event) {\n  event.preventDefault()\n  Dropdown.getOrCreateInstance(this).toggle()\n})\n\n/**\n * jQuery\n */\n\ndefineJQueryPlugin(Dropdown)\n\nexport default Dropdown\n"]},"metadata":{},"sourceType":"script"}