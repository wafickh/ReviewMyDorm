{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\OneDrive\\\\Desktop\\\\WebCourse\\\\DormCritique\\\\frontend\\\\src\\\\pages\\\\Admin\\\\Admin.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport { Link, useNavigate, useLocation, Navigate } from \"react-router-dom\";\nimport * as actionType from '../../constants/actionTypes';\nimport { useDispatch } from 'react-redux';\nimport { useSelector } from 'react-redux';\nimport { getAllDorms } from '../../actions/dormss';\nimport { getAllReviews } from '../../actions/reviews';\nimport decode from 'jwt-decode';\nimport Navbar from '../../components/navbar/Navbar';\nimport './Admin.css';\nimport SideMenu from '../../components/SideMenu/SideMenu';\nimport PageContent from '../../components/PageContent/PageContent';\nexport default function Admin() {\n  const [user, setUser] = useState(JSON.parse(localStorage.getItem('profile')));\n  const dispatch = useDispatch();\n  const location = useLocation();\n  const history = useNavigate();\n  const dormss = useSelector(state => state.dormss);\n  console.log(dormss);\n  const reviews = useSelector(state => state.reviews);\n  console.log(reviews);\n\n  const logout = () => {\n    dispatch({\n      type: actionType.LOGOUT\n    });\n    setUser(null);\n    history.push('/auth');\n  };\n\n  useEffect(() => {\n    if (!user || user.result.email !== \"wafic@hotmail.com\") {\n      history('/auth');\n    }\n\n    dispatch(getAllDorms());\n    dispatch(getAllReviews());\n  }, [location]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Navbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }), user.result.email === \"wafic@hotmail.com\" ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Appp\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"navnav\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"butt1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 29\n    }\n  }, \"Dorms\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"butt2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 29\n    }\n  }, \"Reviews\")), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 25\n    }\n  }, \"display the actual data\"))) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"center\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 25\n    }\n  }, \"This Page does not exist\"))));\n}","map":{"version":3,"sources":["C:/Users/USER/OneDrive/Desktop/WebCourse/DormCritique/frontend/src/pages/Admin/Admin.jsx"],"names":["React","useState","useEffect","Link","useNavigate","useLocation","Navigate","actionType","useDispatch","useSelector","getAllDorms","getAllReviews","decode","Navbar","SideMenu","PageContent","Admin","user","setUser","JSON","parse","localStorage","getItem","dispatch","location","history","dormss","state","console","log","reviews","logout","type","LOGOUT","push","result","email"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { Link, useNavigate, useLocation, Navigate } from \"react-router-dom\"\r\nimport * as actionType from '../../constants/actionTypes';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useSelector } from 'react-redux'\r\nimport { getAllDorms } from '../../actions/dormss';\r\nimport { getAllReviews } from '../../actions/reviews';\r\nimport decode from 'jwt-decode';\r\nimport Navbar from '../../components/navbar/Navbar'\r\nimport './Admin.css'\r\nimport SideMenu from '../../components/SideMenu/SideMenu';\r\nimport PageContent from '../../components/PageContent/PageContent';\r\nexport default function Admin() {\r\n    const [user, setUser] = useState(JSON.parse(localStorage.getItem('profile')));\r\n    const dispatch = useDispatch();\r\n    const location = useLocation();\r\n    const history = useNavigate();\r\n    const dormss = useSelector((state) => state.dormss)\r\n    console.log(dormss)\r\n    const reviews = useSelector((state) => state.reviews)\r\n    console.log(reviews)\r\n\r\n    const logout = () => {\r\n        dispatch({ type: actionType.LOGOUT });\r\n        setUser(null);\r\n        history.push('/auth');\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (!user || user.result.email !== \"wafic@hotmail.com\") {\r\n            history('/auth')\r\n        }\r\n        dispatch(getAllDorms());\r\n\r\n        dispatch(getAllReviews());\r\n\r\n\r\n\r\n    }, [location]);\r\n    \r\n\r\n    return (\r\n        <div>\r\n\r\n            <Navbar />\r\n\r\n            {user.result.email === \"wafic@hotmail.com\" ? (\r\n                <>\r\n                    {/* <div className='Appp'>\r\n                            <SideMenu />\r\n                            <PageContent />\r\n                    </div> */}\r\n                    <div className='Appp'>\r\n                        <div className='navnav'>\r\n                        <div className=\"butt1\">\r\n                            <button>Dorms</button>\r\n                        </div>\r\n                            <div className=\"butt2\">\r\n\r\n                                \r\n                            </div>\r\n                            <button>Reviews</button>\r\n                            {/* <p>Get Users (delete users)</p>\r\n                        <p>Get Dorms (display dorms that are not yet approved) you can delete or update/approve a dorm</p>\r\n                        <p>Get all schools get all dorms then filter to get the unapproved</p>\r\n                        <p>Get Reviews (get all not approved reviews) delete or approve/update </p>\r\n                         */}\r\n\r\n\r\n                        </div>\r\n                        <div>\r\n                            display the actual data\r\n                        </div>\r\n\r\n\r\n\r\n                    </div>\r\n                </>\r\n            ) : (<>\r\n                <center><h1>This Page does not exist</h1></center>\r\n            </>)}\r\n\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}