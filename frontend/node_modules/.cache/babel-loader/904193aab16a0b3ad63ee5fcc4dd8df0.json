{"ast":null,"code":"/*!\n  * Bootstrap backdrop.js v5.2.3 (https://getbootstrap.com/)\n  * Copyright 2011-2022 The Bootstrap Authors (https://github.com/twbs/bootstrap/graphs/contributors)\n  * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n  */\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('../dom/event-handler'), require('./index'), require('./config')) : typeof define === 'function' && define.amd ? define(['../dom/event-handler', './index', './config'], factory) : (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.Backdrop = factory(global.EventHandler, global.Index, global.Config));\n})(this, function (EventHandler, index, Config) {\n  'use strict';\n\n  const _interopDefaultLegacy = e => e && typeof e === 'object' && 'default' in e ? e : {\n    default: e\n  };\n\n  const EventHandler__default = /*#__PURE__*/_interopDefaultLegacy(EventHandler);\n\n  const Config__default = /*#__PURE__*/_interopDefaultLegacy(Config);\n  /**\n   * --------------------------------------------------------------------------\n   * Bootstrap (v5.2.3): util/backdrop.js\n   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n   * --------------------------------------------------------------------------\n   */\n\n  /**\n   * Constants\n   */\n\n\n  const NAME = 'backdrop';\n  const CLASS_NAME_FADE = 'fade';\n  const CLASS_NAME_SHOW = 'show';\n  const EVENT_MOUSEDOWN = `mousedown.bs.${NAME}`;\n  const Default = {\n    className: 'modal-backdrop',\n    clickCallback: null,\n    isAnimated: false,\n    isVisible: true,\n    // if false, we use the backdrop helper without adding any element to the dom\n    rootElement: 'body' // give the choice to place backdrop under different elements\n\n  };\n  const DefaultType = {\n    className: 'string',\n    clickCallback: '(function|null)',\n    isAnimated: 'boolean',\n    isVisible: 'boolean',\n    rootElement: '(element|string)'\n  };\n  /**\n   * Class definition\n   */\n\n  class Backdrop extends Config__default.default {\n    constructor(config) {\n      super();\n      this._config = this._getConfig(config);\n      this._isAppended = false;\n      this._element = null;\n    } // Getters\n\n\n    static get Default() {\n      return Default;\n    }\n\n    static get DefaultType() {\n      return DefaultType;\n    }\n\n    static get NAME() {\n      return NAME;\n    } // Public\n\n\n    show(callback) {\n      if (!this._config.isVisible) {\n        index.execute(callback);\n        return;\n      }\n\n      this._append();\n\n      const element = this._getElement();\n\n      if (this._config.isAnimated) {\n        index.reflow(element);\n      }\n\n      element.classList.add(CLASS_NAME_SHOW);\n\n      this._emulateAnimation(() => {\n        index.execute(callback);\n      });\n    }\n\n    hide(callback) {\n      if (!this._config.isVisible) {\n        index.execute(callback);\n        return;\n      }\n\n      this._getElement().classList.remove(CLASS_NAME_SHOW);\n\n      this._emulateAnimation(() => {\n        this.dispose();\n        index.execute(callback);\n      });\n    }\n\n    dispose() {\n      if (!this._isAppended) {\n        return;\n      }\n\n      EventHandler__default.default.off(this._element, EVENT_MOUSEDOWN);\n\n      this._element.remove();\n\n      this._isAppended = false;\n    } // Private\n\n\n    _getElement() {\n      if (!this._element) {\n        const backdrop = document.createElement('div');\n        backdrop.className = this._config.className;\n\n        if (this._config.isAnimated) {\n          backdrop.classList.add(CLASS_NAME_FADE);\n        }\n\n        this._element = backdrop;\n      }\n\n      return this._element;\n    }\n\n    _configAfterMerge(config) {\n      // use getElement() with the default \"body\" to get a fresh Element on each instantiation\n      config.rootElement = index.getElement(config.rootElement);\n      return config;\n    }\n\n    _append() {\n      if (this._isAppended) {\n        return;\n      }\n\n      const element = this._getElement();\n\n      this._config.rootElement.append(element);\n\n      EventHandler__default.default.on(element, EVENT_MOUSEDOWN, () => {\n        index.execute(this._config.clickCallback);\n      });\n      this._isAppended = true;\n    }\n\n    _emulateAnimation(callback) {\n      index.executeAfterTransition(callback, this._getElement(), this._config.isAnimated);\n    }\n\n  }\n\n  return Backdrop;\n});","map":{"version":3,"sources":["../../src/util/backdrop.js"],"names":["NAME","CLASS_NAME_FADE","CLASS_NAME_SHOW","EVENT_MOUSEDOWN","Default","className","clickCallback","isAnimated","isVisible","rootElement","DefaultType","Config","constructor","show","execute","element","reflow","hide","dispose","EventHandler","_getElement","backdrop","document","_configAfterMerge","config","getElement","_append","_emulateAnimation","executeAfterTransition"],"mappings":";;;;;;;;;;;;;;;;;AAAA;;;;;;;AAWA;;;;;AAIA,QAAMA,IAAI,GAAV,UAAA;AACA,QAAMC,eAAe,GAArB,MAAA;AACA,QAAMC,eAAe,GAArB,MAAA;AACA,QAAMC,eAAe,GAAmBH,gBAAAA,IAAxC,EAAA;AAEA,QAAMI,OAAO,GAAG;AACdC,IAAAA,SAAS,EADK,gBAAA;AAEdC,IAAAA,aAAa,EAFC,IAAA;AAGdC,IAAAA,UAAU,EAHI,KAAA;AAIdC,IAAAA,SAAS,EAJK,IAAA;AAIG;AACjBC,IAAAA,WAAW,EALG,MAAA,CAAA;;AAAA,GAAhB;AAQA,QAAMC,WAAW,GAAG;AAClBL,IAAAA,SAAS,EADS,QAAA;AAElBC,IAAAA,aAAa,EAFK,iBAAA;AAGlBC,IAAAA,UAAU,EAHQ,SAAA;AAIlBC,IAAAA,SAAS,EAJS,SAAA;AAKlBC,IAAAA,WAAW,EAAE;AALK,GAApB;AAQA;;;;AAIA,QAAA,QAAA,SAAuBE,eAAAA,CAAvB,OAAA,CAA8B;AAC5BC,IAAAA,WAAW,CAAA,MAAA,EAAS;AAClB;AACA,WAAA,OAAA,GAAe,KAAA,UAAA,CAAf,MAAe,CAAf;AACA,WAAA,WAAA,GAAA,KAAA;AACA,WAAA,QAAA,GAAA,IAAA;AAL0B,KAAA,CAAA;;;AASV,eAAPR,OAAO,GAAG;AACnB,aAAA,OAAA;AACD;;AAEqB,eAAXM,WAAW,GAAG;AACvB,aAAA,WAAA;AACD;;AAEc,eAAJV,IAAI,GAAG;AAChB,aAAA,IAAA;AAlB0B,KAAA,CAAA;;;AAsB5Ba,IAAAA,IAAI,CAAA,QAAA,EAAW;AACb,UAAI,CAAC,KAAA,OAAA,CAAL,SAAA,EAA6B;AAC3BC,QAAAA,KAAAA,CAAAA,OAAAA,CAAAA,QAAAA;AACA;AACD;;AAED,WAAA,OAAA;;AAEA,YAAMC,OAAO,GAAG,KAAhB,WAAgB,EAAhB;;AACA,UAAI,KAAA,OAAA,CAAJ,UAAA,EAA6B;AAC3BC,QAAAA,KAAAA,CAAAA,MAAAA,CAAAA,OAAAA;AACD;;AAEDD,MAAAA,OAAO,CAAPA,SAAAA,CAAAA,GAAAA,CAAAA,eAAAA;;AAEA,WAAA,iBAAA,CAAuB,MAAM;AAC3BD,QAAAA,KAAAA,CAAAA,OAAAA,CAAAA,QAAAA;AADF,OAAA;AAGD;;AAEDG,IAAAA,IAAI,CAAA,QAAA,EAAW;AACb,UAAI,CAAC,KAAA,OAAA,CAAL,SAAA,EAA6B;AAC3BH,QAAAA,KAAAA,CAAAA,OAAAA,CAAAA,QAAAA;AACA;AACD;;AAED,WAAA,WAAA,GAAA,SAAA,CAAA,MAAA,CAAA,eAAA;;AAEA,WAAA,iBAAA,CAAuB,MAAM;AAC3B,aAAA,OAAA;AACAA,QAAAA,KAAAA,CAAAA,OAAAA,CAAAA,QAAAA;AAFF,OAAA;AAID;;AAEDI,IAAAA,OAAO,GAAG;AACR,UAAI,CAAC,KAAL,WAAA,EAAuB;AACrB;AACD;;AAEDC,MAAAA,qBAAAA,CAAAA,OAAAA,CAAAA,GAAAA,CAAiB,KAAjBA,QAAAA,EAAAA,eAAAA;;AAEA,WAAA,QAAA,CAAA,MAAA;;AACA,WAAA,WAAA,GAAA,KAAA;AAhE0B,KAAA,CAAA;;;AAoE5BC,IAAAA,WAAW,GAAG;AACZ,UAAI,CAAC,KAAL,QAAA,EAAoB;AAClB,cAAMC,QAAQ,GAAGC,QAAQ,CAARA,aAAAA,CAAjB,KAAiBA,CAAjB;AACAD,QAAAA,QAAQ,CAARA,SAAAA,GAAqB,KAAA,OAAA,CAArBA,SAAAA;;AACA,YAAI,KAAA,OAAA,CAAJ,UAAA,EAA6B;AAC3BA,UAAAA,QAAQ,CAARA,SAAAA,CAAAA,GAAAA,CAAAA,eAAAA;AACD;;AAED,aAAA,QAAA,GAAA,QAAA;AACD;;AAED,aAAO,KAAP,QAAA;AACD;;AAEDE,IAAAA,iBAAiB,CAAA,MAAA,EAAS;AACxB;AACAC,MAAAA,MAAM,CAANA,WAAAA,GAAqBC,KAAAA,CAAAA,UAAAA,CAAWD,MAAM,CAAtCA,WAAqBC,CAArBD;AACA,aAAA,MAAA;AACD;;AAEDE,IAAAA,OAAO,GAAG;AACR,UAAI,KAAJ,WAAA,EAAsB;AACpB;AACD;;AAED,YAAMX,OAAO,GAAG,KAAhB,WAAgB,EAAhB;;AACA,WAAA,OAAA,CAAA,WAAA,CAAA,MAAA,CAAA,OAAA;;AAEAI,MAAAA,qBAAAA,CAAAA,OAAAA,CAAAA,EAAAA,CAAAA,OAAAA,EAAAA,eAAAA,EAA0C,MAAM;AAC9CL,QAAAA,KAAAA,CAAAA,OAAAA,CAAQ,KAAA,OAAA,CAARA,aAAAA;AADFK,OAAAA;AAIA,WAAA,WAAA,GAAA,IAAA;AACD;;AAEDQ,IAAAA,iBAAiB,CAAA,QAAA,EAAW;AAC1BC,MAAAA,KAAAA,CAAAA,sBAAAA,CAAsB,QAAtBA,EAAiC,KAAX,WAAW,EAAjCA,EAAqD,KAAA,OAAA,CAArDA,UAAAA;AACD;;AAzG2B","sourcesContent":["/**\n * --------------------------------------------------------------------------\n * Bootstrap (v5.2.3): util/backdrop.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nimport EventHandler from '../dom/event-handler'\nimport { execute, executeAfterTransition, getElement, reflow } from './index'\nimport Config from './config'\n\n/**\n * Constants\n */\n\nconst NAME = 'backdrop'\nconst CLASS_NAME_FADE = 'fade'\nconst CLASS_NAME_SHOW = 'show'\nconst EVENT_MOUSEDOWN = `mousedown.bs.${NAME}`\n\nconst Default = {\n  className: 'modal-backdrop',\n  clickCallback: null,\n  isAnimated: false,\n  isVisible: true, // if false, we use the backdrop helper without adding any element to the dom\n  rootElement: 'body' // give the choice to place backdrop under different elements\n}\n\nconst DefaultType = {\n  className: 'string',\n  clickCallback: '(function|null)',\n  isAnimated: 'boolean',\n  isVisible: 'boolean',\n  rootElement: '(element|string)'\n}\n\n/**\n * Class definition\n */\n\nclass Backdrop extends Config {\n  constructor(config) {\n    super()\n    this._config = this._getConfig(config)\n    this._isAppended = false\n    this._element = null\n  }\n\n  // Getters\n  static get Default() {\n    return Default\n  }\n\n  static get DefaultType() {\n    return DefaultType\n  }\n\n  static get NAME() {\n    return NAME\n  }\n\n  // Public\n  show(callback) {\n    if (!this._config.isVisible) {\n      execute(callback)\n      return\n    }\n\n    this._append()\n\n    const element = this._getElement()\n    if (this._config.isAnimated) {\n      reflow(element)\n    }\n\n    element.classList.add(CLASS_NAME_SHOW)\n\n    this._emulateAnimation(() => {\n      execute(callback)\n    })\n  }\n\n  hide(callback) {\n    if (!this._config.isVisible) {\n      execute(callback)\n      return\n    }\n\n    this._getElement().classList.remove(CLASS_NAME_SHOW)\n\n    this._emulateAnimation(() => {\n      this.dispose()\n      execute(callback)\n    })\n  }\n\n  dispose() {\n    if (!this._isAppended) {\n      return\n    }\n\n    EventHandler.off(this._element, EVENT_MOUSEDOWN)\n\n    this._element.remove()\n    this._isAppended = false\n  }\n\n  // Private\n  _getElement() {\n    if (!this._element) {\n      const backdrop = document.createElement('div')\n      backdrop.className = this._config.className\n      if (this._config.isAnimated) {\n        backdrop.classList.add(CLASS_NAME_FADE)\n      }\n\n      this._element = backdrop\n    }\n\n    return this._element\n  }\n\n  _configAfterMerge(config) {\n    // use getElement() with the default \"body\" to get a fresh Element on each instantiation\n    config.rootElement = getElement(config.rootElement)\n    return config\n  }\n\n  _append() {\n    if (this._isAppended) {\n      return\n    }\n\n    const element = this._getElement()\n    this._config.rootElement.append(element)\n\n    EventHandler.on(element, EVENT_MOUSEDOWN, () => {\n      execute(this._config.clickCallback)\n    })\n\n    this._isAppended = true\n  }\n\n  _emulateAnimation(callback) {\n    executeAfterTransition(callback, this._getElement(), this._config.isAnimated)\n  }\n}\n\nexport default Backdrop\n"]},"metadata":{},"sourceType":"script"}